openapi: 3.0.0
info:
  description: |
    CAM REST API
  title: Revenue Management Interfaces
  version: <#CAM_BE_VERSION#>

servers:
  - url: '<#SERVER_URL#>'

paths:

  # <Customer Management API>
  '/ui-api/v1/customerData':
    post:
      tags:
        - Customer Data
      summary: Create Customer
      operationId: createCustomer
      requestBody:
        description: Customer object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'

    get:
      tags:
        - Customer Data
      summary: List Customers by search criteria
      operationId: searchCustomer
      parameters:
        - name: companyDetails.name
          in: query
          description: Company Name (Using start with...)
          example: companyDetails.name=startWith(CompanyNa)
          schema:
            type: string
        - name: id
          in: query
          description: Customer Reference (Using start with...)
          example: id=startWith(CA-121314)
          schema:
            type: string
        - name: contact.firstName
          in: query
          description: Contact First Name
          example: contact.firstName=contains(John)
          schema:
            type: string
        - name: contact.lastName
          in: query
          description: Contact Last Name (Using start with...)
          example: contact.lastName=startWith(Adams)
          schema:
            type: string
        - name: eventSource.eventSource
          in: query
          description: Event Source Name (Using start with...)
          example: eventSource.eventSource=startWith(132)
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerData'

        '400':
          description: Invalid status value


  '/ui-api/v1/customerData/{customerUuid}':
    get:
      tags:
        - Customer Data
      summary: Get Customer by UUID with Addresses and Contacts
      operationId: getCustomerWithSubResources
      parameters:
        - name: customerUuid
          in: path
          description: Customer UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'

        '400':
          description: Invalid status value

  '/ui-api/v1/customer/{customerUuid}':
    put:
      tags:
        - Customer
      summary: Update Customer by UUID
      operationId: updateCustomer
      parameters:
        - name: customerUuid
          in: path
          description: Customer UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Customer object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

        '400':
          description: Invalid UUID value

    get:
      tags:
        - Customer
      summary: Get Customer by UUID
      operationId: getCustomer
      parameters:
        - name: customerUuid
          in: path
          description: Customer UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

        '400':
          description: Invalid status value

  '/ui-api/v1/customer/{customerUuid}/parentHierarchy':
    get:
      tags:
        - Customer Hierarchy
      summary: Get Customer Hierarchy
      operationId: getCustomerHierarchy
      parameters:
        - name: customerUuid
          in: path
          description: Customer UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerWithLevel'

        '400':
          description: Invalid status value


  '/ui-api/v1/customerData/{customerUuid}/childHierarchy':
    get:
      tags:
        - Customer Data
      summary: Get Customer Hierarchy
      operationId: getChildCustomerHierarchy
      parameters:
        - name: customerUuid
          in: path
          description: Customer UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerData'

        '400':
          description: Invalid status value

  # </Customer Management API>

  # <Address Management API>
  '/ui-api/v1/address':
    post:
      tags:
        - Address
      summary: Create Address
      operationId: createAddress
      requestBody:
        description: Address object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'

    get:
      tags:
        - Address
      summary: List Address
      operationId: listAddress
      parameters:
        - name: customer.uuid
          in: query
          description: Customer UUID
          required: true
          example: customer.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'


  '/ui-api/v1/address/{addressUuid}':
    put:
      tags:
        - Address
      summary: Update Address by UUID
      operationId: updateAddress
      parameters:
        - name: addressUuid
          in: path
          description: Address UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Address object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'

        '400':
          description: Invalid UUID value


    get:
      tags:
        - Address
      summary: Get Address by UUID
      operationId: getAddressByUUID
      parameters:
        - name: addressUuid
          in: path
          description: Address UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'

        '400':
          description: Invalid status value
  # </Address Management API >

  # <Contact Management API >
  '/ui-api/v1/contact':
    post:
      tags:
        - Contact
      summary: Create Contact
      operationId: createContact
      requestBody:
        description: Contact object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

    get:
      tags:
        - Contact
      summary: List Contact
      operationId: listContact
      parameters:
        - name: customer.uuid
          in: query
          description: Customer UUID
          required: true
          example: customer.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'


  '/ui-api/v1/contact/{contactUuid}':
    put:
      tags:
        - Contact
      summary: Update Contact by UUID
      operationId: updateContact
      parameters:
        - name: contactUuid
          in: path
          description: Contact UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Contact object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

        '400':
          description: Invalid UUID value


    get:
      tags:
        - Contact
      summary: Get Contact by UUID
      operationId: getContactByUUID
      parameters:
        - name: contactUuid
          in: path
          description: Contact UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

        '400':
          description: Invalid status value
  # </Contact Management API >

  # <Billing Account Management API >
  '/ui-api/v1/account':
    post:
      tags:
        - Billing Account
      summary: Create Billing Account
      operationId: createBillingAccount
      parameters:
        - name: effectiveDateTime
          in: query
          description: Effective date time
          required: false
          schema:
            type: string
      requestBody:
        description: Billing Account object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAccount'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'

  '/ui-api/v1/account/{accountUUID}':
    put:
      tags:
        - Billing Account
      summary: Update Billing Account
      operationId: updateBillingAccount
      parameters:
        - name: accountUUID
          in: path
          description: BillingAccountUUID
          required: true
          schema:
            type: string
      requestBody:
        description: Billing Account object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAccount'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'

    get:
      tags:
        - Billing Account
      summary: Get Billing Account by UUID
      operationId: getBillingAccount
      parameters:
        - name: accountUUID
          in: path
          required: true
          description: BillingAccountUUID
          schema:
            type: string
        - name: snapshotDateTime
          in: query
          required: false
          description: Snapshot Date Time
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'

        '400':
          description: Invalid status value

  '/ui-api/v1/accountData/{accountUUID}':
    get:
      tags:
        - Billing Account Data
      summary: Get Billing Account Data
      operationId: getBillingAccountData
      parameters:
        - name: accountUUID
          in: path
          description: BillingAccountUUID
          required: true
          schema:
            type: string
        - name: snapshotDateTime
          in: query
          required: false
          description: Snapshot Date Time
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccountData'

  '/ui-api/v1/accountData':
    get:
      tags:
        - Billing Account Data
      summary: Search Billing Account Data
      operationId: searchBillingAccountData
      parameters:
        - name: customer.uuid
          in: query
          description: Customer UUID
          example: customer.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: id
          in: query
          description: Account ID (Using start with...)
          example: id=startWith(CA-121314)
          schema:
            type: string
        - name: contact.firstName
          in: query
          description: Contact First Name
          example: contact.firstName=contains(John)
          schema:
            type: string
        - name: contact.lastName
          in: query
          description: Contact Last Name (Using start with...)
          example: contact.lastName=startWith(Adams)
          schema:
            type: string
        - name: eventSource.eventSource
          in: query
          description: Event Source Name (Using start with...)
          example: eventSource.eventSource=startWith(132)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingAccountData'

  # <Billing Account Lifecycle>
  '/ui-api/v1/account/{accountUuid}/lifecycle':
    get:
      tags:
        - Billing Account Lifecycle
      summary: List Lifecycle Records
      operationId: listLifeCycleRecords
      parameters:
        - name: accountUuid
          in: path
          required: true
          description: Billing Account UUID
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: startDateTime
          in: query
          required: false
          description: Start Date Time
          example: startDateTime=eq(202-08-12T00:00:00Z)
          schema:
            type: string
        - name: endDateTime
          in: query
          required: false
          description: End Date Time
          example: endDateTime=eq(2021-08-28T18:29:59Z)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LifecycleRecord'

  '/ui-api/v1/account/{accountUuid}/terminate':
    post:
      tags:
        - Billing Account Lifecycle
      summary: Terminate Billing Account
      operationId: terminateBillingAccount
      parameters:
        - name: accountUuid
          in: path
          required: true
          description: Billing Account UUID
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      requestBody:
        description: Terminate Request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleRecord'

  '/ui-api/v1/account/{accountUuid}/cancelTermination':
    post:
      tags:
        - Billing Account Lifecycle
      summary: Cancel Termination of  Billing Account
      operationId: cancelTerminateBillingAccount
      parameters:
        - name: accountUuid
          in: path
          required: true
          description: Billing Account UUID
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      requestBody:
        description: Cancel Termination Request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTerminationRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleRecord'

  '/ui-api/v1/account/{accountUuid}/reinstate':
    post:
      tags:
        - Billing Account Lifecycle
      summary: Reinstate  Billing Account
      operationId: reinstateTerminateBillingAccount

      parameters:
        - name: accountUuid
          in: path
          description: Billing Account UUID
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          required: true
          schema:
            type: string

      requestBody:
        description: Reinstate Request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinstateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleRecord'

  '/ui-api/v1/account/{accountUuid}/suspend':
    post:
      tags:
        - Billing Account Lifecycle
      summary: Suspend Billing Account
      operationId: suspendBillingAccount
      parameters:
        - name: accountUuid
          in: path
          description: Billing Account UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Suspend Request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleRecord'

  '/ui-api/v1/account/{accountUuid}/reactivate':
    post:
      tags:
        - Billing Account Lifecycle
      summary: Reactivate Billing Account
      operationId: reactivateBillingAccount
      parameters:
        - name: accountUuid
          in: path
          description: Billing Account UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Reactivate Request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactivateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleRecord'
  # </Billing Account Lifecycle>

  # <Billing Account Receivable>
  '/ui-api/v1/accountReceivable':
    get:
      tags:
        - Billing Account Receivable
      summary: List Account Receivables
      operationId: listAccountReceivable
      parameters:
        - name: account.uuid
          in: query
          required: true
          description: Billing Account UUID
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountReceivable'
  # </Billing Account Receivable>

  # </Billing Account Management API >


  # <Bill Reissue Request API >
  '/ui-api/v1/billReissueRequest':
    post:
      tags:
        - Bill Reissue
      summary: Create Bill Reissue Request
      operationId: createBillReissueRequest
      requestBody:
        description: Bill Reissue Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillReissueRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillReissueRequest'
    get:
      tags:
        - Bill Reissue
      summary: List Bill Reissue Request
      operationId: listBillReissueRequests
      parameters:
        - name: account.uuid
          in: query
          required: true
          description: Billing Account UUID
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillReissueRequest'

  '/ui-api/v1/billReissueRequest/{billReissueRequestUuid}':
    put:
      tags:
        - Bill Reissue
      summary: Update Bill Reissue Request
      description: Method to update an Bill Reissue
      operationId: updateBillReissueRequest
      parameters:
        - name: billReissueRequestUuid
          in: path
          description: Bill Reissue request UUID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillReissueRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillReissueRequest'
        '400':
          description: Invalid UUID value
    delete:
      tags:
        - Bill Reissue
      summary: Delete Bill Reissue Request
      operationId: deleteBillReissueRequest
      parameters:
        - name: billReissueRequestUuid
          in: path
          description: Bill Reissue request UUID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
  # </Bill Reissue API >

  # < Customer Payment API >
  '/ui-api/v1/customerPayment':
    get:
      tags:
        - Customer Payment
      operationId: listCustomerPayments
      parameters:
        - name: customer.uuid
          in: query
          description: Customer UUID
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Payment Status
          required: false
          schema:
            type: string
        - name: amount
          in: query
          description: Payment Amount
          required: false
          schema:
            type: string
        - name: paymentMethod.uuid
          in: query
          description: Payment Method
          required: false
          schema:
            type: string
        - name: paymentReference
          in: query
          description: Payment Reference
          required: false
          schema:
            type: string
        - name: registrationDateTimeFrom
          in: query
          description: Creation Date From
          required: false
          schema:
            type: string
        - name: registrationDateTimeTo
          in: query
          description: Creation Date To
          required: false
          schema:
            type: string
        - name: paymentDateTimeFrom
          in: query
          description: Payment Date From
          required: false
          schema:
            type: string
        - name: paymentDateTimeTo
          in: query
          description: Payment Date To
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerPayment'

  '/ui-api/v1/customerPayment/{customerPaymentUuid}':
    get:
      tags:
        - Customer Payment
      operationId: getCustomerPaymentByUUID
      parameters:
        - name: customerPaymentUuid
          in: path
          description: uuid of the customer payment
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPayment'

  # </Customer Payment API >

  # < Account Payment API >
  '/ui-api/v1/accountPayment':
    get:
      tags:
        - Account Payment
      operationId: listAccountPayments
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Payment Status
          required: false
          example:  status=in(PAYMENT_STATUS_CREATED)
          schema:
            type: string
        - name: amountInAccountCurrency
          in: query
          description: Payment Amount
          required: false
          example:  amountInAccountCurrency=eq(1000)
          schema:
            type: string
        - name: paymentType.uuid
          in: query
          description: Payment Origin Type
          required: false
          example:  paymentType.uuid=eq(8fbe93ff-479e-4f0b-8cbc-12fb96e424b0)
          schema:
            type: string
        - name: paymentReference
          in: query
          description: Payment Reference
          required: false
          example:  paymentReference=eq(PRC786876476)
          schema:
            type: string
        - name: registrationDateTimeFrom
          in: query
          description: Creation Date From
          required: false
          example:  registrationDateTimeFrom=gte(2021-08-01T00:00:00Z)
          schema:
            type: string
        - name: registrationDateTimeTo
          in: query
          description: Creation Date To
          required: false
          example:  registrationDateTimeTo=lte(2021-08-31T23:59:59Z)
          schema:
            type: string
        - name: paymentDateTimeFrom
          in: query
          description: Payment Date From
          required: false
          example:  paymentDateTimeFrom=gte(2021-08-01T00:00:00Z)
          schema:
            type: string
        - name: paymentDateTimeTo
          in: query
          description: Payment Date To
          required: false
          example:  paymentDateTimeTo=lte(2021-08-31T23:59:59Z)
          schema:
            type: string
        - name: depositBalance.uuid
          in: query
          description: Deposit Balance UUID
          required: false
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountPayment'


  '/ui-api/v1/accountPayment/{accountPaymentUuid}':
    get:
      tags:
        - Account Payment
      operationId: getAccountPaymentByUuid
      parameters:
        - name: accountPaymentUuid
          in: path
          description: Account Payment UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPayment'

  # </Account Payment API >

  # < Payment Allocation API >
  '/ui-api/v1/paymentAllocation':
    get:
      tags:
        - Payment Allocation
      operationId: listPaymentAllocations
      parameters:
        - name: accountPayment.uuid
          in: query
          description: Account Payment UUID
          required: false
          schema:
            type: string
        - name: account.uuid
          in: query
          description: Account UUID
          required: false
          schema:
            type: string
        - name: billSequence
          in: query
          description: BillSequence
          required: false
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentAllocation'

  '/ui-api/v1/paymentAllocationGroupedByBill':
    get:
      tags:
        - Payment Allocation Grouped By Bill
      operationId: listPaymentAllocationsGroupedByBill
      parameters:
        - name: accountPayment.uuid
          in: query
          description: Account Payment UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentAllocationByBill'


  # </Payment Allocation API >

  # < Payment API >

  '/ui-api/v1/paymentData':
    post:
      tags:
        - Payment Data
      operationId: createPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentData'

    get:
      tags:
        - Payment Data
      operationId: listPaymentData
      parameters:
        - name: customer.uuid
          in: query
          description: Customer UUID
          required: false
          schema:
            type: string
        - name: account.uuid
          in: query
          description: Account UUID
          required: false
          schema:
            type: string
        - name: customerPayment.uuid
          in: query
          description: Customer Payment UUID
          required: false
          schema:
            type: string
        - name: accountPayment.uuid
          in: query
          description: Account Payment UUID
          required: false
          schema:
            type: string
        - name: accountPayment.status
          in: query
          description: Payment Status
          required: false
          example:  accountPayment.status=eq(PAYMENT_STATUS_CREATED)
          schema:
            type: string
        - name: accountPayment.amountInAccountCurrency
          in: query
          description: Payment Amount
          required: false
          example:  accountPayment.amountInAccountCurrency=eq(1000)
          schema:
            type: string
        - name: accountPayment.paymentType.uuid
          in: query
          description: Payment Origin Type
          required: false
          example:  accountPayment.paymentType.uuid=eq(8fbe93ff-479e-4f0b-8cbc-12fb96e424b0)
          schema:
            type: string
        - name: accountPayment.paymentReference
          in: query
          description: Payment Reference
          required: false
          example:  accountPayment.paymentReference=eq(PRC768855)
          schema:
            type: string
        - name: accountPayment.registrationDateTimeFrom
          in: query
          description: Creation Date From
          required: false
          example:  accountPayment.registrationDateTimeFrom=gte(2021-08-01T00:00:00Z)
          schema:
            type: string
        - name: accountPayment.registrationDateTimeTo
          in: query
          description: Creation Date To
          required: false
          example:  accountPayment.registrationDateTimeTo=lte(2021-08-31T23:59:59Z)
          schema:
            type: string
        - name: accountPayment.paymentDateTimeFrom
          in: query
          description: Payment Date From
          required: false
          example:  accountPayment.paymentDateTimeFrom=gte(2021-08-01T00:00:00Z)
          schema:
            type: string
        - name: accountPayment.paymentDateTimeTo
          in: query
          description: Payment Date To
          required: false
          example:  accountPayment.paymentDateTimeTo=lte(2021-08-31T23:59:59Z)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentData'

  '/ui-api/v1/paymentData/{customerPaymentUuid}':
    put:
      tags:
        - Payment Data
      operationId: modifyPayment
      parameters:
        - name: customerPaymentUuid
          in: path
          description: Customer Payment unique identifer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentData'

  '/ui-api/v1/paymentData/{customerPaymentUuid}/movePayment':
    post:
      tags:
        - Payment Data Lifecycle
      operationId: movePayment
      parameters:
        - name: customerPaymentUuid
          in: path
          description: Customer Payment unique identifer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMoveRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentData'

  '/ui-api/v1/paymentData/{customerPaymentUuid}/failPayment':
    post:
      tags:
        - Payment Data Lifecycle
      summary: Fail Customer payment
      operationId: failPayment
      parameters:
        - name: customerPaymentUuid
          in: path
          description: Customer Payment unique identifer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFailureRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentData'

  '/ui-api/v1/paymentData/{customerPaymentUuid}/cancelPayment':
    post:
      tags:
        - Payment Data Lifecycle
      summary: Cancel Customer payment
      operationId: cancelPayment
      parameters:
        - name: customerPaymentUuid
          in: path
          description: Customer Payment unique identifer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCancelRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentData'

  # </Payment API >

  # <Balance Transfer API >
  '/ui-api/v1/transferBalance':
    post:
      tags:
        - Transfer Balance
      operationId: transferBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferBalanceRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPayment'
  # </Balance Transfer API >

  # <Product Instance Management API >
  '/ui-api/v1/productInstanceHierarchy':
    get:
      tags:
        - Product Instance Hierarchy
      summary: Return products hierarchy by given products/subscriptions id.
      operationId: listProductInstancesHierarchy
      parameters:
        - name: customer.uuid
          in: query
          description: Customer Account UUID
          schema:
            type: string

        - name: account.uuid
          in: query
          description: Billing Account UUID
          schema:
            type: string

        - name: parentProductInstance.uuid
          in: query
          required: true
          description: Parent Product Instance UUID
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInstanceHierarchy'
        '400':
          description: Invalid status value

  '/ui-api/v1/productInstance':

    post:
      tags:
        - Product Instance
      summary: Create Product Instance
      operationId: createProductInstance
      requestBody:
        description: Product Instance object
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductInstance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInstance'
        '400':
          description: Invalid status value

    get:
      tags:
        - Product Instance
      summary: Return list of products/subscription instances for the given account.
      operationId: listProductInstances
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          example: eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: customer.uuid
          in: query
          description: Customer Account UUID
          example: eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: subscriptionInstance.uuid
          in: query
          description: Subscription Instance UUID
          example: subscriptionInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: parentProductInstance.uuid
          in: query
          description: Parent Product Instance UUID
          example: parentProductInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: product.uuid
          in: query
          description: Product UUID
          example: product.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: subscriptionReference
          in: query
          description: Subscription Reference
          example: subscriptionReference=eq(SR8768756767)
          schema:
            type: string
        - name: status
          in: query
          description: Status of product instance
          example: status=in(PRODUCT_INSTANCE_STATUS_ACTIVE)
          schema:
            type: string
        - name: label
          in: query
          description: Product Instance Label
          example: label=eq(product label)
          schema:
            type: string
        - name: tariff.uuid
          in: query
          description: Billing Tariff UUID
          example: tariff.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: snapshotDateTime
          in: query
          description: Snapshot Date Time
          example: snapshotDateTime=eq(2021-08-19T00:00:00Z)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInstance'

        '400':
          description: Invalid status value

    put:
      tags:
        - Product Instance
      summary: Modify Product Instance
      operationId: modifyProductInstance
      requestBody:
        description: Product Instance object
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductInstance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInstance'
        '400':
          description: Invalid status value

  '/ui-api/v1/productInstance/{productInstanceUuid}':

    get:
      tags:
        - Product Instance
      summary: Get Product Instance by Product Instance UUID
      operationId: findProductInstanceById
      parameters:
        - name: productInstanceUuid
          in: path
          description: Product Instance UUID
          required: true
          schema:
            type: string
        - name: snapshotDateTime
          in: query
          required: false
          description: Snapshot Date Time
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInstance'


        '400':
          description: Invalid UUID value


  '/ui-api/v1/productInstance/count':
    get:
      tags:
        - Product Instance
      summary: Return Product Instance count.
      operationId: getProductInstanceCountByAccount
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: true
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInstanceCount'

        '400':
          description: Invalid status value
  # </Product Instance Management API >

  # <Product Instance Transfer Management API >
  '/ui-api/v1/productInstanceTransferRequest':
    get:
      tags:
        - Product Instance Transfer
      summary: Return list of transfer request history for the given product instance.
      operationId: listProductInstanceTransferHistory
      parameters:
        - name: productInstance.uuid
          in: query
          description: Product Instance UUID
          required: true
          example: productInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInstanceTransferRequest'

        '400':
          description: Invalid status value

    post:
      tags:
        - Product Instance
      summary: Transfer product instance across customer/account hierarchy.
      operationId: transferProductInstance
      requestBody:
        description: Product Instance Transfer Object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInstanceTransfer'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value

  '/ui-api/v1/productInstanceTransferRequest/{transferRequestUuid}/cancel':
    post:
      tags:
        - Product Instance Transfer
      summary: Cancel product instance transfer request.
      operationId: cancelProductInstanceTransferRequest
      parameters:
        - name: transferRequestUuid
          in: path
          description:  Product Instance Transfer unique identifer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
  # </Product Instance Transfer Management API >

  # <Deposit Balance Management API >
  '/ui-api/v1/depositBalance':
    get:
      tags:
        - Deposit Balance
      summary: List Deposit Balances for an account
      description:
        The list API must be called by passing atleast one filtering criteria
      operationId: listDepositBalance
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: true
          example: account.uuid=eq(62e91501-9918-441c-9533-15e345e828f1)
          schema:
            type: string
        - name: productInstance.uuid
          in: query
          description: Product Instance UUID
          required: false
          example: productInstance.uuid=eq(4057b043-c55f-42d3-ad95-fd1b4317357b)
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepositBalance'
        '400':
          description: Invalid status value

    post:
      tags:
        - Deposit Balance
      summary: Create Deposit Balance
      operationId: createDepositBalance
      requestBody:
        description: Deposit Balance object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositBalance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBalance'
        '400':
          description: Invalid status value

  '/ui-api/v1/depositBalance/{depositBalanceUuid}':
    put:
      tags:
        - Deposit Balance
      summary: Modify Deposit Balance
      operationId: modifyDepositBalance
      parameters:
        - name: depositBalanceUuid
          in: path
          description: Deposit Balance UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Deposit Balance object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositBalance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBalance'
        '400':
          description: Invalid UUID value

    get:
      tags:
        - Deposit Balance
      summary: Get Deposit Balance
      operationId: getDepositBalance
      parameters:
        - name: depositBalanceUuid
          in: path
          description: Deposit Balance UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBalance'

  # </Deposit Balance Management API >

  # <Bill Management API >
  /ui-api/v1/account/{accountUuid}/bill:
    get:
      tags:
        - Bill
      summary: Get List of Bill
      operationId: getBills
      parameters:
        - name: accountUuid
          in: path
          description: Account UUID
          required: true
          schema:
            type: string

        - name: billType.uuid
          in: query
          example:  status=in(BILL_TYPE)
          schema:
            type: string


        - name: billStatus
          in: query
          example:  status=in(STATUS)
          schema:
            type: string


      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'


  /ui-api/v1/account/{accountUuid}/bill/{billSequence}:
    get:
      tags:
        - Bill
      summary: Get Bill by UUID
      operationId: getBill
      parameters:
        - name: accountUuid
          in: path
          description: Account UUID - BillSequence
          required: true
          schema:
            type: string
        - name: billSequence
          in: path
          description: BillSequence
          required: true
          schema:
            type: integer
        - name: billVersion
          in: query
          description: To fetch the specific Bill Version for given bill sequence
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid UUID value

  # </Bill Management API >

  # <Billed Receivables Payment Management API >

  /ui-api/v1/account/{accountUuid}/billedReceivablesPayment/{billSequence}:
    get:
      tags:
        - Billed Receivables Payment
      summary: Get List of Billed Receivables Payment Allocation
      operationId: getBilledReceivablesPayments
      parameters:
        - name: accountUuid
          in: path
          description: Account UUID - BillSequence
          required: true
          schema:
            type: string
        - name: billSequence
          in: path
          description: BillSequence
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BilledReceivablesPayment'
        '400':
          description: Invalid UUID value and BillSequence Combination

  # </Billed Receivables Payment Management API >

  # <Bill Cancel Request Management API>
  '/ui-api/v1/billCancelRequest':
    post:
      tags:
        - Bill Cancel Operation
      summary: Create Bill Cancellation Request
      operationId: createBillCancelRequest
      requestBody:
        description: Bill Cancellation Request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillCancelRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillCancelRequest'
        '400':
          description: Invalid status value

    get:
      tags:
        - Bill Cancel Operation
      summary: List Bill Cancellation Request
      operationId: listBillCancelRequest
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillCancelRequest'

  '/ui-api/v1/billCancelRequest/{billCancelRequestUuid}/cancel':
    post:
      tags:
        - Bill Cancel Operation
      summary: Cancel Bill Cancellation Request
      operationId: cancelBillCancelRequest
      parameters:
        - name: billCancelRequestUuid
          in: path
          description: Bill Cancel Request UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillCancelRequest'
        '400':
          description: Invalid status value

  '/ui-api/v1/billCancelRequest/{billCancelRequestUuid}':
    get:
      tags:
        - Bill Cancel Operation
      summary: Get Bill Cancellation Request
      operationId: getBillCancelRequest
      parameters:
        - name: billCancelRequestUuid
          in: path
          description: Bill Cancel Request UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillCancelRequest'
        '400':
          description: Invalid UUID value

  '/ui-api/v1/billCancelRequest/{billCancelRequestUuid}/resubmit':
    post:
      tags:
        - Bill Cancel Operation
      summary: Resubmit Bill Cancellation Request
      operationId: resubmitBillCancelRequest
      parameters:
        - name: billCancelRequestUuid
          in: path
          description: Bill Cancel Request UUID
          required: true
          schema:
            type: string
        - name: reason
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillCancelRequest'
        '400':
          description: Invalid status value

  '/ui-api/v1/billCancelRequest/{billCancelRequestUuid}/reset':
    post:
      tags:
        - Bill Cancel Operation
      summary: Reset Bill Cancellation Request
      operationId: resetBillCancelRequest
      parameters:
        - name: billCancelRequestUuid
          in: path
          description: Bill Cancel Request UUID
          required: true
          schema:
            type: string
        - name: reason
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillCancelRequest'
        '400':
          description: Invalid status value
  # </Bill Cancel Request Management API>

  # <ReBill Operation API>
  '/ui-api/v1/rebillRequest':
    post:
      tags:
        - Rebill Operation
      summary: Create Rebill Request
      operationId: createReBillRequest
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid status value

  '/ui-api/v1/rebillRequest/cancel':
    post:
      tags:
        - Rebill Operation
      summary: Cancel Rebill Request
      operationId: cancelReBillRequest
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid status value

  '/ui-api/v1/rebillRequest/resubmit':
    post:
      tags:
        - Rebill Operation
      summary: Resubmit Rebill Request
      operationId: resubmitReBillRequest
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
        - name: reason
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid status value
  # </Rebill Operation API>

  # <Bill Product Charges API >
  '/ui-api/v1/productCharges':
    get:
      tags:
        - Bill Product Charge
      summary: List Product Charges
      operationId: listProductCharges
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          example: account.uuid=eq(bacc8479-e466-4472-b8db-91c8ee16000f)
          schema:
            type: string
        - name: billSequence
          in: query
          description: BillSequence
          required: true
          example: billSequence=eq(1)
          schema:
            type: string
        - name: status
          in: query
          description: Status
          required: false
          example: status=in(BPC_STATUS_ACTIVE,BPC_STATUS_IMPLIED_ACTIVE,BPC_STATUS_REFUNDED)
          schema:
            type: string
        - name: productInstance.uuid
          in: query
          description: Product Instance UUID
          required: false
          example: productInstance.uuid=eq(bacc8479-e466-4472-b8db-91c8ee16000f)
          schema:
            type: string
        - name: receivableClass.uuid
          in: query
          description: Receivable Class UUID
          required: false
          example: receivableClass.uuid=eq(bacc8479-e466-4472-b8db-91c8ee16000f)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillProductCharge'
        '400':
          description: Invalid UUID value

  # </Bill Product Charges API >

  # <One Time Charge Instance Management API >
  '/ui-api/v1/oneTimeChargeInstance':
    post:
      tags:
        - One-Time Charge Instances
      summary: Create OTC instances
      operationId: createOneTimeChargeInstances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OneTimeChargeInstance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeChargeInstance'

    get:
      tags:
        - One-Time Charge Instances
      summary: List OTC instances
      operationId: searchOneTimeChargeInstances
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: false
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: parentOtcInstance.uuid
          in: query
          description: One time charge UUID
          required: false
          example: parentOtcInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: bill.billSequence
          in: query
          description: Bill Sequence
          required: false
          example: bill.billSequence=eq(1)
          schema:
            type: string
        - name: oneTimeCharge.uuid
          in: query
          description: OTC UUID
          required: false
          example: oneTimeCharge.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: productInstance.uuid
          in: query
          description: Product Instance UUID
          required: false
          example: productInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: status
          in: query
          description: OTC Status
          required: false
          example: status=in(OTC_CREATED,OTC_CANCELLED)
          schema:
            type: string
        - name: chargeDateTimeFrom
          in: query
          description: Charge Date Time From
          required: false
          schema:
            type: string
        - name: chargeDateTimeTo
          in: query
          description: Charge Date Time To
          required: false
          schema:
            type: string
        - name: isRealtime
          in: query
          description: Realtime Flag
          required: false
          example: isRealtime=eq(true)
          schema:
            type: string
        - name: isBilled
          in: query
          description: Billed Flag
          required: false
          example: isBilled=eq(false)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeChargeInstance'

        '400':
          description: Invalid status value

    put:
      tags:
        - One-Time Charge Instances
      summary: Modify OTC instances
      operationId: updateOneTimeChargeInstance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OneTimeChargeInstance'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeChargeInstance'

  '/ui-api/v1/oneTimeChargeInstance/{oneTimeChargeInstanceUuid}':
    get:
      tags:
        - One-Time Charge Instances
      summary: Get OTC Instance by UUID
      operationId: getOneTimeChargeInstanceByUUID
      parameters:
        - name: oneTimeChargeInstanceUuid
          in: path
          description: One Time Charge Instance UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeChargeInstance'

        '400':
          description: Invalid status value

    delete:
      tags:
        - One-Time Charge Instances
      summary: Delete OTC Instance
      operationId: deleteOneTimeChargeInstance
      parameters:
        - name: oneTimeChargeInstanceUuid
          in: path
          description: One Time Charge Instance UUID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation

  '/ui-api/v1/oneTimeChargeInstance/{oneTimeChargeInstanceUuid}/cancel':
    post:
      tags:
        - One-Time Charge Instances
      summary: Cancel OTC instance
      operationId: cancelOneTimeChargeInstance
      parameters:
        - name: oneTimeChargeInstanceUuid
          in: path
          description: One Time Charge Instance UUID
          required: true
          schema:
            type: string
        - name: cancellationText
          in: query
          description: Reason for cancelling OTC
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeChargeInstance'

  '/ui-api/v1/oneTimeChargeInstance/{oneTimeChargeInstanceUuid}/terminate':
    post:
      tags:
        - One-Time Charge Instances
      summary: Terminate OTC instance
      operationId: terminateOneTimeChargeInstance
      parameters:
        - name: oneTimeChargeInstanceUuid
          in: path
          description: One Time Charge Instance UUID
          required: true
          schema:
            type: string
        - name: terminationDateTime
          in: query
          description: Termination Date Time
          required: true
          schema:
            type: string
        - name: terminationReason
          in: query
          description: Reason for terminating OTC
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeChargeInstance'
  # </One Time Charge Instance Management API >

  # <Usage Discount Instance Management API >
  '/ui-api/v1/usageDiscountInstance':
    get:
      tags:
        - Usage Discount Instance
      summary: Return list of Usage Discount Instance.
      operationId: searchUsageDiscountInstance
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: false
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: customer.uuid
          in: query
          description: Customer UUID
          required: false
          example: customer.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageDiscountInstance'

        '400':
          description: Invalid status value

  # </Usage Discount Instance Management API >

  # <Event Source Management API >

  '/ui-api/v1/eventSource':
    post:
      tags:
        - Event Source
      summary: Create Event Source
      description: Method to create an event source
      operationId: createEventSource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSource'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSource'

    get:
      tags:
        - Event Source
      summary: List Event Sources
      operationId: listEventSource
      parameters:
        - name: customer.uuid
          in: query
          required: true
          example: customer.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: eventSource
          in: query
          required: false
          example: eventSource=eq(87568654674)
          schema:
            type: string
        - name: productInstance.uuid
          in: query
          required: false
          example: productInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: eventType.uuid
          in: query
          required: false
          example: eventType.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: ratingTariff.uuid
          in: query
          required: false
          example: ratingTariff.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSource'

  '/ui-api/v1/eventSource/{eventSourceName}':
    put:
      tags:
        - Event Source
      summary: Update Event Source
      description: Method to update an event source
      operationId: updateEventSource
      parameters:
        - name: eventSourceName
          in: path
          description: Event Source
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSource'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSource'
        '400':
          description: Invalid UUID value

    get:
      tags:
        - Event Source
      summary: Get Event Source by UUID
      operationId: getEventSource
      parameters:
        - name: eventSourceName
          in: path
          description: Event Source
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSource'


  '/ui-api/v1/customerEventType':
    get:
      tags:
        - Customer Event Types
      summary: List Customer Event Types
      operationId: listCustomerEventTypes
      parameters:
        - name: customer.uuid
          in: query
          required: true
          example: customer.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamedUUID'


  # </Event Source Management API >

  # <Usage Management API >
  '/ui-api/v1/usage':
    get:
      tags:
        - Usage
      summary: List Usages for an account
      operationId: listUsage
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: true
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: eventSource
          in: query
          description: Event Source Identifier
          required: false
          example: eventSource=eq(9079868657)
          schema:
            type: string
        - name: eventType.uuid
          in: query
          description: Event Type UUID
          required: false
          example: eventType.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: status
          in: query
          description: Status of the usage
          required: false
          example: status=eq(Billed)
          schema:
            type: string
        - name: eventDateTime
          in: query
          required: false
          example: eventDateTime=gt(2020-01-01T00:00:00Z)&eventDateTime=lt(2021-01-01T00:00:00Z)
          schema:
            type: string
        - name: bill.billSequence
          in: query
          description: BillSequence
          required: false
          example: bill.billSequence=eq(1)
          schema:
            type: string
        - name: productInstance.uuid
          in: query
          description: Product Instance UUID
          required: false
          example: productInstance.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
        '400':
          description: Invalid status value

  '/ui-api/v1/usage/{eventReference}':
    get:
      tags:
        - Usage
      summary: Get Usage by reference
      operationId: getUsage
      parameters:
        - name: eventReference
          in: path
          description: Unique identifier of the usage record
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'

  # </Usage Management API >

  # <Dispute Management API >
  '/ui-api/v1/dispute':
    post:
      tags:
        - Dispute
      summary: Create Dispute
      operationId: createDispute
      requestBody:
        description: Create Dispute
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Dispute'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dispute'

    get:
      tags:
        - Dispute
      summary: List Disputes
      description: Return list of disputes for given billing account.
      operationId: listDispute
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID for retreiving disputes
          required: true
          schema:
            type: string
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
        - name: bill.billSequence
          in: query
          description: Bill Sequence
          schema:
            type: string
          example: bill.billSequence=eq(2)
        - name: status
          in: query
          description: Current status of disputes
          schema:
            type: string
          example: status=in(DISPUTE_STATUS_PENDING)
        - name: disputeType.uuid
          in: query
          description: Dispute Type UUID
          schema:
            type: string
          example: disputeType.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
        - name: disputeClass
          in: query
          description: Dispute Class
          schema:
            type: string
          example: disputeClass=eq(DISPUTE_CLASS_PRODUCT)
        - name: disputeDateTimeFrom
          in: query
          description: Dispute Date Time from which dispute must be fetched
          schema:
            type: string
          example: disputeDateTimeFrom=gte(2021-07-06T18:40:00.000Z)
        - name: disputeDateTimeTo
          in: query
          description: Dispute Date Time upto which dispute must be fetched
          schema:
            type: string
          example: disputeDateTimeTo=lte(2021-07-15T18:36:00.000Z)
        - name: groupNumber
          in: query
          description: Group Number
          schema:
            type: string
          example: groupNumber=eq(126)
        - name: registrationDateTimeFrom
          in: query
          description: Registration Date Time from which dispute must be fetched
          schema:
            type: string
          example: registrationDateTimeFrom=gte(2021-07-06T18:40:00.000Z)
        - name: registrationDateTimeTo
          in: query
          description: Registration Date Time upto which dispute must be fetched
          schema:
            type: string
          example: registrationDateTimeTo=lte(2021-07-15T18:36:00.000Z)
        - name: amountFrom
          in: query
          description: Amount from which dispute must be fetched
          schema:
            type: string
          example: amountFrom=eq(10000)
        - name: amountTo
          in: query
          description: Amount from which dispute must be fetched
          schema:
            type: string
          example: amountTo=eq(13000)
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dispute'
        '404':
          description: Not Found

    put:
      tags:
        - Dispute
      summary: Update Dispute
      operationId: updateDispute
      requestBody:
        description: Dispute object
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Dispute'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dispute'
        '400':
          description: Invalid UUID value
        '404':
          description: Not Found

  '/ui-api/v1/dispute/{disputeUUID}':
    get:
      tags:
        - Dispute
      summary: Get Dispute Details
      operationId: getDispute
      parameters:
        - name: disputeUUID
          in: path
          description: Dispute UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
        '404':
          description: Not Found

  '/ui-api/v1/dispute/{disputeUUID}/approve':
    post:
      tags:
        - Dispute
      summary: Approve Dispute
      operationId: approveDispute
      parameters:
        - name: disputeUUID
          in: path
          description: Dispute UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Dispute Approval request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveDispute'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'

  '/ui-api/v1/dispute/{disputeUUID}/cancel':
    post:
      tags:
        - Dispute
      summary: Cancel Dispute
      operationId: cancelDispute
      parameters:
        - name: disputeUUID
          in: path
          description: Dispute UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'

  '/ui-api/v1/dispute/{disputeUUID}/reject':
    post:
      tags:
        - Dispute
      summary: Reject Dispute
      operationId: rejectDispute
      parameters:
        - name: disputeUUID
          in: path
          description: Dispute UUID
          required: true
          schema:
            type: string
        - name: decision
          in: query
          description: Additional information about dispute rejection
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
  # </Dispute Management API >

  # <Aggregated Usage API >
  '/ui-api/v1/aggregatedUsage':
    get:
      tags:
        - Aggregated Usage
      summary: List Aggregated Usages for an account
      operationId: listAggregatedUsage
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: true
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: eventSource
          in: query
          description: Event Source Identifier
          required: false
          example: eventSource=eq(9079868657)
          schema:
            type: string
        - name: eventType.uuid
          in: query
          description: Event Type UUID
          required: false
          example: eventType.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: eventDateTimeFrom
          in: query
          required: false
          example: eventDateTimeFrom=gte(2020-01-01T00:00:00Z)
          schema:
            type: string
        - name: eventDateTimeTo
          in: query
          required: false
          example: eventDateTimeFrom=lte(2021-01-01T00:00:00Z)
          schema:
            type: string
        - name: bill.billSequence
          in: query
          description: BillSequence
          required: false
          example: bill.billSequence=eq(1)
          schema:
            type: string
        - name: eventSummary.uuid
          in: query
          description: Event Summary UUID
          required: false
          example: eventSummary.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
          schema:
            type: string
        - name: aggregationReference
          in: query
          description: Aggregation Reference
          required: false
          example: aggregationReference=eq(8b20c7863990a)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AggregatedUsage'
  # </Aggregated Usage API >
  # < Payment Mandate API >
  '/ui-api/v1/paymentMandate':
    post:
      tags:
        - Payment Mandate
      summary: Create Payment Mandate
      operationId: createPaymentMandate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMandate'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMandate'

    get:
      tags:
        - Payment Mandate
      summary: List Payment Mandates
      operationId: listPaymentMandate
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMandate'

  '/ui-api/v1/paymentMandate/{paymentMandateUuid}':
    put:
      tags:
        - Payment Mandate
      summary: Update Payment Mandate
      operationId: modifyPaymentMandate
      parameters:
        - name: paymentMandateUuid
          in: path
          description: Payment Mandate unique identifer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMandate'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMandate'

    get:
      tags:
        - Payment Mandate
      summary: Get Payment Mandate Details
      operationId: getPaymentMandate
      parameters:
        - name: paymentMandateUuid
          in: path
          description: PaymentMandate UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMandate'

  '/ui-api/v1/paymentMandate/{paymentMandateUuid}/cancel':
    post:
      tags:
        - Payment Mandate
      summary: Cancel Payment Mandate
      operationId: cancelPaymentMandate
      parameters:
        - name: paymentMandateUuid
          in: path
          description: Payment Mandate UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMandate'
  # </Payment Mandate API >

  # <Reference Data API >
  '/ui-api/v1/referenceData/billType':
    get:
      tags:
        - Bill Type
      summary: Return list of BillTypes.
      operationId: getBillTypeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/billType/{billTypeUuid}':
    get:
      tags:
        - Bill Type
      summary: Return Bill Type by its UUID.
      operationId: getBillTypeByUUID
      parameters:
        - name: billTypeUuid
          in: path
          description: Bill Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/contractedPointOfSupply':
    get:
      tags:
        - Contracted Point Of Supply
      summary: Return list of Contracted Point Of Supply
      operationId: getContractedPointOfSupplyList
      parameters:
        - name: invoicingCompany.uuid
          in: query
          description: Invoicing Company UUID
          required: false
          example: invoicingCompany.uuid=eq(bacc8479-e466-4472-b8db-91c8ee16000f)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractedPointOfSupply'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/contractedPointOfSupply/{contractedPointOfSupplyUuid}':
    get:
      tags:
        - Contracted Point Of Supply
      summary: Return Contracted Point Of Supply by its UUID.
      operationId: getContractedPointOfSupplyByUUID
      parameters:
        - name: contractedPointOfSupplyUuid
          in: path
          description: Contracted Point Of Supply UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractedPointOfSupply'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/language':
    get:
      tags:
        - Language
      summary: Return list of Languages.
      operationId: getLanguageList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/language/{languageId}':
    get:
      tags:
        - Language
      summary: Return Language by its UUID.
      operationId: getLanguageByUUID
      parameters:
        - name: languageId
          in: path
          description: Language ID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/currency':
    get:
      tags:
        - Currency
      summary: Return list of Currency.
      operationId: getCurrencyList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/currency/{currencyId}':
    get:
      tags:
        - Currency
      summary: Return Currency by its UUID.
      operationId: getCurrencyByUUID
      parameters:
        - name: currencyId
          in: path
          description: Currency ID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/country':
    get:
      tags:
        - Country
      summary: Return list of Countries.
      operationId: getCountryList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/country/{countryId}':
    get:
      tags:
        - Country
      summary: Return Country by its UUID.
      operationId: getCountryByUUID
      parameters:
        - name: countryId
          in: path
          description: Country ID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/eventType':
    get:
      tags:
        - Event Type
      summary: Return list of Event Types.
      operationId: getEventTypeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'



  '/ui-api/v1/referenceData/eventType/{eventTypeUuid}':
    get:
      tags:
        - Event Type
      summary: Return Event Type by its UUID.
      operationId: getEventTypeByUUID
      parameters:
        - name: eventTypeUuid
          in: path
          description: Event Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'


  '/ui-api/v1/referenceData/contactType':
    get:
      tags:
        - Contact Type
      summary: Return list of Contact Types.
      operationId: getContactTypeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/contactType/{contactTypeUuid}':
    get:
      tags:
        - Contact Type
      summary: Return Contact Type by its UUID.
      operationId: getContactTypeByUUID
      parameters:
        - name: contactTypeUuid
          in: path
          description: Contact Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactType'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/revenueCode':
    get:
      tags:
        - Revenue Code
      summary: Return list of Revenue Codes.
      operationId: getRevenueCodeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueCode'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/revenueCode/{revenueCodeUuid}':
    get:
      tags:
        - Revenue Code
      summary: Return Revenue Code by its UUID.
      operationId: getRevenueCodeByUUID
      parameters:
        - name: revenueCodeUuid
          in: path
          description: Revenue Code UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueCode'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/receivableClass':
    get:
      tags:
        - Receivable Class
      summary: Return list of Receivable Classes.
      operationId: getReceivableClassList
      parameters:
        - name: receivableClassType
          in: query
          description: Receivable Class Type
          required: false
          example: receivableClassType=eq(RECEIVABLE_CLASS_TYPE_NORMAL_CHARGES_RECEIVABLES)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivableClass'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/receivableClass/{receivableClassUuid}':
    get:
      tags:
        - Receivable Class
      summary: Return Receivable Class by its UUID.
      operationId: getReceivableClassByUUID
      parameters:
        - name: receivableClassUuid
          in: path
          description: Receivable Class UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableClass'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/revenueRecognitionClass':
    get:
      tags:
        - Revenue Recognition Class
      summary: Return list of Revenue Recognition Classes.
      operationId: getRevenueRecognitionClassList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueRecognitionClass'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/revenueRecognitionClass/{revenueRecognitionClassUuid}':
    get:
      tags:
        - Revenue Recognition Class
      summary: Return Revenue Recognition Class by its UUID.
      operationId: getRevenueRecognitionClassByUUID
      parameters:
        - name: revenueRecognitionClassUuid
          in: path
          description: Revenue Recognition Class UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueRecognitionClass'

        '400':
          description: Invalid status value



  '/ui-api/v1/referenceData/addressFormat':
    get:
      tags:
        - Address Format
      summary: Return list of Address Formates.
      operationId: getAddressFormatList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressFormat'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/addressFormat/{addressFormatUuid}':
    get:
      tags:
        - Address Format
      summary: Return Address Format by its UUID.
      operationId: getAddressFormatByUUID
      parameters:
        - name: addressFormatUuid
          in: path
          description: Address Format UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressFormat'

        '400':
          description: Invalid status value



  '/ui-api/v1/referenceData/invoicingCompany':
    get:
      tags:
        - Invoicing Company
      summary: Return list of Invoicing Companies.
      operationId: getInvoicingCompanyList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicingCompany'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/invoicingCompany/{invoicingCompanyUuid}':
    get:
      tags:
        - Invoicing Company
      summary: Return Invoicing Company  by its UUID.
      operationId: getInvoicingCompanyByUUID
      parameters:
        - name: invoicingCompanyUuid
          in: path
          description: Invoicing Company UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicingCompany'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/invoicingCompany/{invoicingCompanyUuid}/paymentMethods':
    get:
      tags:
        - ICO Payment Methods
      summary: Return ICO Payment Methods by its UUID.
      operationId: getICOPaymentMethods
      parameters:
        - name: invoicingCompanyUuid
          in: path
          description: Invoicing Company UUID
          required: true
          schema:
            type: string
        - name: effectiveDate
          in: query
          description: Effective Date on which payment method has to be active
          required: false
          example: effectiveDate=eq(2020-12-01)
          schema:
            type: string
        - name: isMandateRequired
          in: query
          description: Mandate Required flag
          required: false
          example:  isMandateRequired=eq(true)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'


  '/ui-api/v1/referenceData/paymentOrigin':
    get:
      tags:
        - Payment Origin
      summary: Return list of Payment Origins.
      operationId: getPaymentOriginList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentOrigin'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/paymentOrigin/{paymentOriginUuid}':
    get:
      tags:
        - Payment Origin
      summary: Return Payment Origin by its UUID.
      operationId: getPaymentOriginByUUID
      parameters:
        - name: paymentOriginUuid
          in: path
          description: Payment Origin UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrigin'

        '400':
          description: Invalid status value



  '/ui-api/v1/referenceData/paymentMethod':
    get:
      tags:
        - Payment Method
      summary: Return list of Payment Methods.
      operationId: getPaymentMethodList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/paymentMethod/{paymentMethodUuid}':
    get:
      tags:
        - Payment Method
      summary: Return Payment Method by its UUID.
      operationId: getPaymentMethodByUUID
      parameters:
        - name: paymentMethodUuid
          in: path
          description: Payment Method UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/adjustmentType':
    get:
      tags:
        - Adjustment Type
      summary: Return list of Adjustment Types.
      operationId: getAdjustmentTypeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdjustmentType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/adjustmentType/{adjustmentTypeUuid}':
    get:
      tags:
        - Adjustment Type
      summary: Return Adjustment Type by its UUID.
      operationId: getAdjustmentTypeByUUID
      parameters:
        - name: adjustmentTypeUuid
          in: path
          description: Adjustment Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/creditClass':
    get:
      tags:
        - Credit Class
      summary: Return list of Credit Classes.
      operationId: getCreditClassList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditClass'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/creditClass/{creditClassUuid}':
    get:
      tags:
        - Credit Class
      summary: Return Credit Class by its UUID.
      operationId: getCreditClassByUUID
      parameters:
        - name: creditClassUuid
          in: path
          description: Credit Class UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditClass'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/customerAttribute':
    get:
      tags:
        - Customer Attribute
      summary: Return list of Customer Attributes.
      operationId: getCustomerAttributeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerAttribute'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/accountAttribute':
    get:
      tags:
        - Account Attribute
      summary: Return list of Account Attributes.
      operationId: getAccountAttributeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountAttribute'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/billRequestAttribute':
    get:
      tags:
        - Bill Request Attribute
      summary: List Bill Request Attributes
      operationId: getBillRequestAttributeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillRequestAttribute'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/customerPaymentAttribute':
    get:
      tags:
        - Customer Payment Attribute
      summary: List Customer Payment Attributes
      operationId: getCustomerPaymentAttributeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentAttribute'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/accountPaymentAttribute':
    get:
      tags:
        - Account Payment Attribute
      summary: List Account Payment Attributes
      operationId: getAccountPaymentAttributeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentAttribute'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/itemisationOrder':
    get:
      tags:
        - Itemisation Order
      summary: Return list of Itemisation Orders.
      operationId: listItemisationOrders

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemisationOrder'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/itemisationOrder/{itemisationOrderUuid}':
    get:
      tags:
        - Itemisation Order
      summary: Return Itemisation Order by its UUID.
      operationId: getItemisationOrderByUUID
      parameters:
        - name: itemisationOrderUuid
          in: path
          description: Itemisation Order UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemisationOrder'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/maskingRule':
    get:
      tags:
        - Masking Rule
      summary: Return list of Masking Rules.
      operationId: listMaskingRules

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaskingRule'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/maskingRule/{maskingRuleUuid}':
    get:
      tags:
        - Masking Rule
      summary: Return Masking Rule by its UUID.
      operationId: getMaskingRuleByUUID
      parameters:
        - name: maskingRuleUuid
          in: path
          description: Masking Rule UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingRule'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/terminationReason':
    get:
      tags:
        - Termination Reason
      summary: Return list of Termination Reasons.
      operationId: getTerminationReasonList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TerminationReason'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/terminationReason/{terminationReasonUuid}':
    get:
      tags:
        - Termination Reason
      summary: Return Termination Reason by its UUID.
      operationId: getTerminationReasonByUUID
      parameters:
        - name: terminationReasonUuid
          in: path
          description: Termination Reason UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminationReason'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/customerType':
    get:
      tags:
        - Customer Type
      summary: Return list of Customer Types.
      operationId: getCustomerTypeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/customerType/{customerTypeUuid}':
    get:
      tags:
        - Customer Type
      summary: Return Customer Type by its UUID.
      operationId: getCustomerTypeByUUID
      parameters:
        - name: customerTypeUuid
          in: path
          description: Customer Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerType'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/billHandlingCode':
    get:
      tags:
        - Bill Handling Code
      summary: Return list of Bill Handling Codes.
      operationId: getBillHandlingCodeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillHandlingCode'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/billHandlingCode/{billHandlingCodeUuid}':
    get:
      tags:
        - Bill Handling Code
      summary: Return Bill Handling Code by its UUID.
      operationId: getBillHandlingCodeByUUID
      parameters:
        - name: billHandlingCodeUuid
          in: path
          description: Bill Handling Code UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillHandlingCode'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/billStyle':
    get:
      tags:
        - Bill Style
      summary: Return list of Bill Styles.
      operationId: getBillStyleList
      parameters:
        - name: language.id
          in: query
          description: Language Id
          required: false
          schema:
            type: string
        - name: paymentMethod.uuid
          in: query
          description: Payment Method UUID
          required: false
          schema:
            type: string
        - name: isTaxInclusive
          in: query
          description: Tax Status
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          description: Effective date
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillStyle'

        '400':
          description: Invalid status value


  '/ui-api/v1/referenceData/billStyle/{billStyleUuid}':
    get:
      tags:
        - Bill Style
      summary: Return Bill Style by its UUID.
      operationId: getBillStyleByUUID
      parameters:
        - name: billStyleUuid
          in: path
          description: Bill Style UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillStyle'

        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/disputeType':
    get:
      tags:
        - Dispute Type
      summary: List Dispute Types
      operationId: getDisputeTypeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisputeType'
        '404':
          description: Not Found
  '/ui-api/v1/referenceData/disputeType/{disputeTypeUuid}':
    get:
      tags:
        - Dispute Type
      summary: Get Dispute Type by UUID
      operationId: getDisputeTypeByUUID
      parameters:
        - name: disputeTypeUuid
          in: path
          description: Dispute Type UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeType'
        '404':
          description: Not Found
  '/ui-api/v1/referenceData/paymentFailureCode':
    get:
      tags:
        - Payment Failure Code
      summary: Return list of Payment Failure Codes.
      operationId: getPaymentFailureCodeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentFailureCode'

  '/ui-api/v1/referenceData/paymentFailureCode/{paymentFailureCodeUuid}':
    get:
      tags:
        - Payment Failure Code
      summary: Return Payment Failure Code by its UUID.
      operationId: getPaymentFailureCodeByUUID
      parameters:
        - name: paymentFailureCodeUuid
          in: path
          description: Payment Failure Code UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentFailureCode'
        '400':
          description: Invalid status value

  '/ui-api/v1/referenceData/template':
    get:
      tags:
        - Template
      summary: List Templates
      operationId: getTemplateList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'

  '/ui-api/v1/referenceData/template/{templateUuid}':
    get:
      tags:
        - Template
      summary: Get Template by UUID
      operationId: getTemplateByUUID
      parameters:
        - name: templateUuid
          in: path
          description: Template UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Not Found

  '/ui-api/v1/referenceData/gparam':
    get:
      tags:
        - Gparam
      summary: Return list of gparams.
      operationId: getGParamList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GParam'

  '/ui-api/v1/referenceData/gparam/{gParamName}':
    get:
      tags:
        - Gparam
      summary: Return gparam by its name.
      operationId: getGParamByName
      parameters:
        - name: gParamName
          in: path
          description: Gparam Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GParam'

  '/ui-api/v1/referenceData/interest':
    get:
      tags:
        - Interest
      summary: Return list of Interests.
      operationId: getInterestList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'

  '/ui-api/v1/referenceData/interest/{interestUuid}':
    get:
      tags:
        - Interest
      summary: Return Interest by its UUID.
      operationId: getInterestByUuid
      parameters:
        - name: interestUuid
          in: path
          description: Interest UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'


  '/ui-api/v1/referenceData/taxCode':
    get:
      tags:
        - Tax Code
      summary: Return list of Tax Code.
      operationId: getTaxCodeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxCode'

  '/ui-api/v1/referenceData/taxCode/{taxCodeUuid}':
    get:
      tags:
        - Tax Code
      summary: Return Tax Code by its UUID.
      operationId: getTaxCodeByUuid
      parameters:
        - name: taxCodeUuid
          in: path
          description: Tax Code UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCode'

  '/ui-api/v1/referenceData/eventSummary':
    get:
      tags:
        - Event Summary
      summary: Return list of Event Summary.
      operationId: getEventSummaryList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSummary'

  '/ui-api/v1/referenceData/eventSummary/{eventSummaryUuid}':
    get:
      tags:
        - Event Summary
      summary: Return Event Summary by its UUID.
      operationId: getEventSummaryByUuid
      parameters:
        - name: eventSummaryUuid
          in: path
          description: Event Summary UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSummary'

  '/ui-api/v1/referenceData/eventLifecycleType':
    get:
      tags:
        - Event Lifecycle Type
      summary: Return list of Event Lifecycle Type.
      operationId: getEventLifecycleTypeList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLifecycleType'

  '/ui-api/v1/referenceData/eventLifecycleType/{eventLifecycleTypeUuid}':
    get:
      tags:
        - Event Lifecycle Type
      summary: Return Event Lifecycle Type by its UUID.
      operationId: getEventLifecycleTypeByUuid
      parameters:
        - name: eventLifecycleTypeUuid
          in: path
          description: Event Lifecycle Type UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLifecycleType'
  # </Reference Data API >


  # <Catalogue Data API >

  '/ui-api/v1/catalogueData/product':
    get:
      tags:
        - Product
      summary: Return list of Products.
      operationId: getProductList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/product/{productUuid}':
    get:
      tags:
        - Product
      summary: Return Product by its UUID.
      operationId: getProductByUUID
      parameters:
        - name: productUuid
          in: path
          description: Product UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/product/{productUuid}/eventTypes':
    get:
      tags:
        - Product Event Types
      summary: Return Product Event Types by its UUID.
      operationId: getProductEventTypes
      parameters:
        - name: productUuid
          in: path
          description: Product UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamedUUID'

        '400':
          description: Invalid status value


  '/ui-api/v1/catalogueData/productFamily':
    get:
      tags:
        - Product Family
      summary: Return list of Product Families.
      operationId: getProductFamilyList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductFamily'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/productFamily/{productFamilyUuid}':
    get:
      tags:
        - Product Family
      summary: Return Product Family by its UUID.
      operationId: getProductFamilyByUUID
      parameters:
        - name: productFamilyUuid
          in: path
          description: Product Family UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamily'

        '400':
          description: Invalid status value



  '/ui-api/v1/catalogueData/billingCatalogue':
    get:
      tags:
        - Billing Catalogue
      summary: Return list of BillingCatalogue.
      operationId: getBillingCatalogueList

      parameters:
        - name: currency.id
          in: query
          description: Currency Id
          required: false
          schema:
            type: string
        - name: invoicingCompany.uuid
          in: query
          description: Invoicing Company UUID
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Billing Catalogue Status
          required: false
          example:  status=in(STATUS_LIVE)
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCatalogue'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/billingCatalogue/{billingCatalogueUuid}':
    get:
      tags:
        - Billing Catalogue
      summary: Return Billing Catalogue by its UUID.
      operationId: getBillingCatalogueByUUID
      parameters:
        - name: billingCatalogueUuid
          in: path
          description: Billing Catalogue UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCatalogue'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/billingTariff':
    get:
      tags:
        - Billing Tariff
      summary: Return list of Billing Tariffs.
      operationId: getBillingTariffList
      parameters:
        - name: billingCatalogue.uuid
          in: query
          description: Billing Catalogue UUID
          schema:
            type: string
        - name: product.uuid
          in: query
          description: Product UUID
          schema:
            type: string
        - name: effectiveDate
          in: query
          description: Effective Date on which  billing tariif has to be active
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingTariff'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/billingTariff/{billingTariffUuid}':
    get:
      tags:
        - Billing Tariff
      summary: Return Billing Tariff by its UUID.
      operationId: getBillingTariffByUUID
      parameters:
        - name: billingTariffUuid
          in: path
          description: Billing Tariff UUID
          required: true
          schema:
            type: string
        - name: product.uuid
          in: query
          description: Product UUID
          schema:
            type: string
        - name: effectiveDate
          in: query
          description: Effective Date on which override has to be active
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingTariff'
        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/billingTariffDiscount':
    get:
      tags:
        - Billing Tariff Discount
      summary: Return list of discounts associated with Billing Tariff.
      operationId: getBillingTariffDiscounts
      parameters:
        - name: billingTariff.uuid
          in: query
          description: Billing Tariff UUID
          required: true
          schema:
            type: string
        - name: product.uuid
          in: query
          description: Product UUID
          schema:
            type: string
        - name: quantity
          in: query
          description: Product Quantity
          example: quantity=lte(10)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingTariffDiscount'
        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/billingTariffRatePlan':
    get:
      tags:
        - Billing Tariff Rate Plan
      summary: List rating tariffs for billing tariff.
      operationId: getBillingTariffRatePlans
      parameters:
        - name: billingTariff.uuid
          in: query
          description: Billing Tariff UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingTariff'

  '/ui-api/v1/catalogueData/ratingCatalogue':
    get:
      tags:
        - Rating Catalogue
      summary: Return list of Rating Catalogues.
      operationId: getRatingCatalogueList
      parameters:
        - name: currency.id
          in: query
          description: Currency Id
          required: false
          schema:
            type: string
        - name: invoicingCompany.uuid
          in: query
          description: Invoicing Company UUID
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Rating Catalogue Status
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingCatalogue'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/ratingCatalogue/{ratingCatalogueUuid}':
    get:
      tags:
        - Rating Catalogue
      summary: Return Rating Catalogue by its UUID.
      operationId: getRatingCatalogueByUUID
      parameters:
        - name: ratingCatalogueUuid
          in: path
          description: Rating Catalogue UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingCatalogue'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/ratingTariffType':
    get:
      tags:
        - Rating Tariff Type
      summary: Return list of  Rating Tariff Types.
      operationId: getRatingTariffTypeList
      parameters:
        - name: ratingCatalogue.uuid
          in: query
          description: Rating Catalogue UUID
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingTariffType'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/ratingTariffType/{ratingTariffTypeUuid}':
    get:
      tags:
        - Rating Tariff Type
      summary: Return Rating Tariff Type by its UUID.
      operationId: getRatingTariffTypeByUUID
      parameters:
        - name: ratingTariffTypeUuid
          in: path
          description: Rating Tariff Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingTariffType'

        '400':
          description: Invalid status value


  '/ui-api/v1/catalogueData/ratingTariff':
    get:
      tags:
        - Rating Tariff
      summary: Return list of Rating Tariffs.
      operationId: getRatingTariffList
      parameters:
        - name: ratingCatalogue.uuid
          in: query
          description: Rating Catalogue UUID
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingTariff'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/ratingTariff/{ratingTariffUuid}':
    get:
      tags:
        - Rating Tariff
      summary: Return Rating Tariff by its UUID.
      operationId: getRatingTariffByUUID
      parameters:
        - name: ratingTariffUuid
          in: path
          description: Rating Tariff UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingTariff'

        '400':
          description: Invalid status value


  '/ui-api/v1/catalogueData/eventRatingTariff':
    get:
      tags:
        - Event Rating Tariff
      summary: List rating tariff for event type
      operationId: getRatingTariffByEventType
      parameters:
        - name: ratingCatalogue.uuid
          in: query
          required: true
          schema:
            type: string
        - name: eventType.uuid
          in: query
          required: true
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: true
          schema:
            type: string
        - name: billingTariff.uuid
          in: query
          required: true
          schema:
            type: string
        - name: isTaxInclusive
          in: query
          required: true
          schema:
            type: string
        - name: isAutomatic
          in: query
          required: false
          schema:
            type: string
        - name: isPartial
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingTariff'

  '/ui-api/v1/catalogueData/eventDiscount':
    get:
      tags:
        - Event Discount
      summary: Return list of Event Discounts.
      operationId: getEventDiscountList
      parameters:
        - name: billingCatalogue.uuid
          in: query
          description: Billing Catalogue UUID
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDiscount'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/eventDiscount/{eventDiscountUuid}':
    get:
      tags:
        - Event Discount
      summary: Return Event Discount by its UUID.
      operationId: getEventDiscountByUUID
      parameters:
        - name: eventDiscountUuid
          in: path
          description: Event Discount UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDiscount'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/oneTimeCharge':
    get:
      tags:
        - One Time Charge
      summary: Return list of One Time Charges.
      operationId: getOneTimeChargeList
      parameters:
        - name: effectiveDateTime
          in: query
          description: Effective date
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeCharge'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/oneTimeCharge/{oneTimeChargeUuid}':
    get:
      tags:
        - One Time Charge
      summary: Return One Time Charge by its UUID.
      operationId: getOneTimeChargeByUUID
      parameters:
        - name: oneTimeChargeUuid
          in: path
          description: One Time Charge UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeCharge'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/oneTimeChargeType':
    get:
      tags:
        - One Time Charge Type
      summary: Return list of One Time Charge Types.
      operationId: getOneTimeChargeTypeList

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeChargeType'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/oneTimeChargeType/{oneTimeChargeTypeUuid}':
    get:
      tags:
        - One Time Charge Type
      summary: Return One Time Charge Type by its UUID.
      operationId: getOneTimeChargeTypeByUUID
      parameters:
        - name: oneTimeChargeTypeUuid
          in: path
          description: One Time Charge Type UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeChargeType'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/oneTimeChargeTariff':
    get:
      tags:
        - One Time Charge Tariff
      summary: Return list of One Time Charge Tariffs.
      operationId: getOneTimeChargeTariffList
      parameters:
        - name: billingCatalogue.uuid
          in: query
          description: Billing Catalogue UUID
          required: false
          schema:
            type: string
        - name: oneTimeCharge.uuid
          in: query
          description: One Time Charge UUID
          required: false
          schema:
            type: string
        - name: isTaxInclusive
          in: query
          description: Flag to specify if OTC tariff is tax exclusive or inclusive.
          required: false
          schema:
            type: string
        - name: effectiveDateTime
          in: query
          description: Effective date
          required: false
          schema:
            type: string
        - name: isInstallmentEligible
          in: query
          description: Flag to specify whether OTC is installment enabled
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeChargeTariff'

        '400':
          description: Invalid status value

  '/ui-api/v1/catalogueData/oneTimeChargeTariff/{oneTimeChargeTariffUuid}':
    get:
      tags:
        - One Time Charge Tariff
      summary: Return One Time Charge by its UUID.
      operationId: getOneTimeChargeTariffByUUID
      parameters:
        - name: oneTimeChargeTariffUuid
          in: path
          description: One Time Charge Tariff UUID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeChargeTariff'

        '400':
          description: Invalid status value
  # </Catalogue Data API >

  # <Realtime Bill Management API >

  '/ui-api/v1/billRequest':
    get:
      tags:
        - Realtime Bill
      summary: List Bill Requests
      operationId: listBillRequest
      parameters:
        - name: account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillRequest'

  /ui-api/v1/createRealtimeBill:
    post:
      tags:
        - Realtime Bill
      summary: Create Realtime Bill
      operationId: createRealtimeBill
      requestBody:
        description: Realtime Bill Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillRequest'

  '/ui-api/v1/formatBill':
    post:
      tags:
        - Realtime Bill Payload
      summary: Format Bill
      operationId: formatBill
      parameters:
        - name: bill.account.uuid
          in: query
          description: Account UUID
          required: true
          schema:
            type: string
        - name: bill.billSequence
          in: query
          description: Bill Sequence Number
          required: true
          schema:
            type: string
        - name: billVersion
          in: query
          description: Bill Version
          required: false
          schema:
            type: integer
        - name: format
          in: query
          description: "Bill format: PDF or HTML. HTML is default format."
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillPayload'

  '/ui-api/v1/createRealtimeTestBill':
    post:
      tags:
        - Realtime Bill Payload
      summary: Generate & Format Test Bill
      operationId: formatTestBill
      parameters:
        - name: format
          in: query
          description: "Bill format: PDF or HTML. HTML is default format."
          required: false
          schema:
            type: string
      requestBody:
        description: Generate & Format Test Bill
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBillPayload'

  # </Realtime Bill Management API >

  # <Adjustment API >
  '/ui-api/v1/adjustment':
    post:
      tags:
        - Adjustment
      summary: Create Adjustment
      operationId: createAdjustment
      requestBody:
        description: Create Adjustment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adjustment'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adjustment'

    get:
      tags:
        - Adjustment
      summary: List Adjustments
      description: Returns list of adjustments for given billing account.
      operationId: listAdjustment
      parameters:
        - name: account.uuid
          in: query
          description: Billing Account UUID
          required: true
          schema:
            type: string
          example: account.uuid=eq(8b20c786-4bbd-4430-b78d-04bdf7f3990a)
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Adjustment'
        '404':
          description: Not Found

  '/ui-api/v1/adjustment/{adjustmentUUID}':
    put:
      tags:
        - Adjustment
      summary: Update Adjustment
      operationId: updateAdjustment
      parameters:
        - name: adjustmentUUID
          in: path
          description: Adjustment UUID
          required: true
          schema:
            type: string
        - name: requestCreditNote
          in: query
          description: Flag to specify whether the credit note request is required or not
          required: false
          schema:
            type: string
      requestBody:
        description: Adjustment object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adjustment'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adjustment'
        '400':
          description: Invalid UUID value
        '404':
          description: Not Found

    get:
      tags:
        - Adjustment
      summary: Get Adjustment Details
      operationId: getAdjustment
      parameters:
        - name: adjustmentUUID
          in: path
          description: Adjustment UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adjustment'

  '/ui-api/v1/adjustment/{adjustmentUUID}/approve':
    post:
      tags:
        - Adjustment
      summary: Approve Adjustment
      operationId: approveAdjustment
      parameters:
        - name: adjustmentUUID
          in: path
          description: Adjustment UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Adjustment Approval request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveAdjustment'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adjustment'

  '/ui-api/v1/adjustment/{adjustmentUUID}/cancel':
    post:
      tags:
        - Adjustment
      summary: Cancel Adjustment
      operationId: cancelAdjustment
      parameters:
        - name: adjustmentUUID
          in: path
          description: Adjustment UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adjustment'

  '/ui-api/v1/adjustment/{adjustmentUUID}/reject':
    post:
      tags:
        - Adjustment
      summary: Reject Adjustment
      operationId: rejectAdjustment
      parameters:
        - name: adjustmentUUID
          in: path
          description: Adjustment UUID
          required: true
          schema:
            type: string
        - name: decision
          in: query
          description: Additional information about rejected adjustment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adjustment'
  # </Adjustment API >


components:
  schemas:

    # < Payments API >
    PaymentCancelRequest:
      type: object
      properties:
        cancellationReason:
          type: string

    PaymentFailureRequest:
      type: object
      properties:
        failureDateTime:
          type: string
        failureCode:
          $ref: '#/components/schemas/NamedUUID'
        failureReason:
          type: string

    PaymentMoveRequest:
      type: object
      properties:
        targetCustomer:
          $ref: '#/components/schemas/UUIDContainer'
        reason:
          type: string

    AccountPayment:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        account:
          $ref: '#/components/schemas/Reference'
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          type: number
        paymentType:
          $ref: '#/components/schemas/NamedUUID'
        paymentDate:
          type: string
        registrationDateTime:
          type: string
        allocatedAmount:
          type: number
        nonAllocatedAmount:
          type: number
        amountInAccountCurrency:
          type: number
        accountCurrency:
          $ref: '#/components/schemas/Currency'
        paymentReference:
          type: string
        description:
          type: string
        status:
          type: string
        isAutoAllocation:
          type: boolean
        cancelReason:
          $ref: '#/components/schemas/CancelledData'
        failureReason:
          $ref: '#/components/schemas/FailureData'
        customerPayment:
          $ref: '#/components/schemas/UUIDContainer'
        transferAccount:
          $ref: '#/components/schemas/Reference'
        transferPayment:
          $ref: '#/components/schemas/UUIDContainer'
        writeOffAccountPayment:
          $ref: '#/components/schemas/UUIDContainer'
        depositBalance:
          $ref: '#/components/schemas/UUIDContainer'
        depositPaymentRule:
          type: string
        paymentCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/PaymentCharacteristic'

    PaymentAllocationByBill:
      type: object
      properties:
        bill:
          $ref: '#/components/schemas/Bill'
        allocatedAmount:
          type: number
        paymentAllocations:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocation'

    PaymentAllocation:
      type: object
      properties:
        accountPayment:
          $ref: '#/components/schemas/UUIDContainer'
        bill:
          $ref: '#/components/schemas/BillKey'
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        notes:
          type: string
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'

    PaymentData:
      type: object
      properties:
        customerPayment:
          $ref: '#/components/schemas/CustomerPayment'
        accountPayments:
          type: array
          items:
            $ref: '#/components/schemas/AccountPayment'
        paymentAllocations:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocation'

    CustomerPayment:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        customer:
          $ref: '#/components/schemas/Reference'
        paymentMethod:
          $ref: '#/components/schemas/NamedUUID'
        paymentType:
          $ref: '#/components/schemas/NamedUUID'
        paymentDate:
          type: string
        registrationDateTime:
          type: string
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        nonAppliedAmount:
          type: number
        status:
          type: string
        paymentReference:
          type: string
        isRefund:
          type: boolean
        batchId:
          type: string
        description:
          type: string
        accountPayments:
          type: array
          items:
            $ref: '#/components/schemas/UUIDContainer'
        failureReason:
          $ref: '#/components/schemas/FailureData'
        cancelReason:
          $ref: '#/components/schemas/CancelledData'
        paymentCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/PaymentCharacteristic'

    PaymentCharacteristic:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Reference'
        valueType:
          type: string
        value:
          type: string

    CancelledData:
      type: object
      properties:
        dateTime:
          type: string
          format: dateTime
        reason:
          type: string
        byWhom:
          type: string

    FailureData:
      type: object
      properties:
        dateTime:
          type: string
          format: dateTime
        reason:
          type: string
        byWhom:
          type: string
        code:
          $ref: '#/components/schemas/NamedUUID'

    # </Payments API >

    BatchStructure:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/BillingAccount'
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        oneTimeChargeInstances:
          type: array
          items:
            $ref: '#/components/schemas/OneTimeChargeInstance'
        productInstances:
          type: array
          items:
            $ref: '#/components/schemas/ProductInstance'
        customerPayments:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPayment'
        accountPayments:
          type: array
          items:
            $ref: '#/components/schemas/AccountPayment'
        paymentAllocations:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocation'
        disputes:
          type: array
          items:
            $ref: '#/components/schemas/Dispute'
        adjustments:
          type: array
          items:
            $ref: '#/components/schemas/Adjustment'
        paymentMandates:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMandate'
        eventSources:
          type: array
          items:
            $ref: '#/components/schemas/EventSource'
        billReissueRequests:
          type: array
          items:
            $ref: '#/components/schemas/BillReissueRequest'

    Customer:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        parentCustomer:
          $ref: '#/components/schemas/UUIDContainer'
        customerType:
          $ref: '#/components/schemas/NamedUUID'
        taxExemptionReference:
          type: string
        vatRegistrationIdentifier:
          type: string
        contact:
          $ref: '#/components/schemas/UUIDContainer'
        companyDetails:
          $ref: '#/components/schemas/CompanyDetails'
        hasChild:
          type: boolean
        hasAccount:
          type: boolean
        type:
          type: string
        billPeriod:
          type: integer
        billPeriodUnits:
          type: string
        billingCustomer:
          $ref: '#/components/schemas/NamedUUID'
        billsPerStatement:
          type: integer
        domainId:
          type: integer
        isBillingDriver:
          type: boolean
        nextBillDateTime:
          type: string

        customerCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCharacteristic'

    CustomerWithLevel:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        level:
          type: integer

    CustomerData:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        contact:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        children:
          $ref: '#/components/schemas/CustomerDataList'

    CustomerDataList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerData'

    CompanyDetails:
      type: object
      properties:
        startDateTime:
          type: string
        endDateTime:
          type: string
        address:
          $ref: '#/components/schemas/UUIDContainer'
        name:
          type: string

    BillingAccountData:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/BillingAccount'
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'

    BillingAccount:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string
        customer:
          $ref: '#/components/schemas/Reference'
        contact:
          $ref: '#/components/schemas/UUIDContainer'
        currency:
          $ref: '#/components/schemas/Currency'
        creditClass:
          $ref: '#/components/schemas/NamedUUID'
        creditLimit:
          type: number
        accountingMethod:
          type: string
        invoicingCompany:
          $ref: '#/components/schemas/NamedUUID'
        paymentMethod:
          $ref: '#/components/schemas/NamedUUID'
        isTaxInclusive:
          type: boolean
        language:
          $ref: '#/components/schemas/NamedID'
        billStyle:
          $ref: '#/components/schemas/NamedUUID'
        billHandlingCode:
          $ref: '#/components/schemas/NamedUUID'
        billPeriod:
          type: integer
        billPeriodUnits:
          type: string
        nextBillDateTime:
          type: string
        status:
          type: string
        statusReason:
          type: string
        terminationReason:
          $ref: '#/components/schemas/NamedUUID'
        balance:
          type: number
        accountCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCharacteristic'

    AccountStatus:
      type: object
      properties:
        status:
          type: string
        effectiveDateTime:
          type: string

    LifecycleRecord:
      type: object
      properties:
        effectiveDateTime:
          type: string
        status:
          type: string
        description:
          type: string


    TerminateRequest:
      type: object
      properties:
        effectiveDateTime:
          type: string
        terminationReason:
          $ref: '#/components/schemas/Reference'

    CancelTerminationRequest:
      type: object
      properties:
        effectiveDateTime:
          type: string
        description:
          type: string
        creditClass:
          $ref: '#/components/schemas/Reference'

    ReinstateRequest:
      type: object
      properties:
        effectiveDateTime:
          type: string
        description:
          type: string
        creditClass:
          $ref: '#/components/schemas/Reference'

    SuspendRequest:
      type: object
      properties:
        startDateTime:
          type: string
        endDateTime:
          type: string
        description:
          type: string

    ReactivateRequest:
      type: object
      properties:
        effectiveDateTime:
          type: string

    SimpleCharacteristic:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueType:
          type: string


    UsageDiscountInstance:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/UUIDContainer'
        account:
          $ref: '#/components/schemas/Reference'
        productInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        eventDiscount:
          $ref: '#/components/schemas/EventDiscount'
        aggregationLevel:
          type: string
        eventSource:
          type: string
        periodNumber:
          type: number
        startDateTime:
          type: string
        endDateTime:
          type: string
        discountedAmount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        discountUnit:
          type: string
        carriedOver:
          type: number
        remaining:
          type: number
        consumed:
          type: number
        capacity:
          type: number
        totalUsage:
          type: number
        cost:
          type: number

    ProductInstanceHierarchy:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        childProductInstaces:
          type: array
          items:
            $ref: '#/components/schemas/ProductInstanceHierarchy'

    ProductInstance:
      type: object
      properties:
        uuid:
          type: string
          description: "System wide unique identifier of the product instance."
        account:
          $ref: '#/components/schemas/Reference'
        customer:
          $ref: '#/components/schemas/UUIDContainer'
        productSequence:
          type: integer
          description: "NRM’s unique identifier of the product instance for a given customer."
        product:
          $ref: '#/components/schemas/Reference'
        productFamily:
          $ref: '#/components/schemas/NamedUUID'
        parentProductInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        isSubscription:
          type: boolean
          description: "Value to identify if the product is a subscription"
        subscriptionInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        subscriptionReference:
          type: string
          description: "The reference of the subscription to which this customer's product belongs"
        customerOrderNumber:
          type: string
          description: "The customer’s order number for the product"
        supplierOrderNumber:
          type: string
          description: "The supplier’s order number for the product"
        hasChild:
          type: boolean
          description: "Indicator to specify if the product has any child product under it."
        label:
          type: string
        quantity:
          type: integer
        additionQuantity:
          type: integer
        terminationQuantity:
          type: integer
        effectiveDateTime:
          type: string
        startDateTime:
          type: string
        endDateTime:
          type: string
        status:
          type: string
        statusReason:
          type: string
        contractedPointOfSupply:
          $ref: '#/components/schemas/NamedUUID'
        taxExemptionReference:
          type: string
        tariff:
          $ref: '#/components/schemas/Reference'
        overrideInAdvance:
          type: boolean
        overrideProrate:
          type: boolean
        contact:
          $ref: '#/components/schemas/UUIDContainer'
        serviceAddress:
          $ref: '#/components/schemas/UUIDContainer'
        eventType:
          type: array
          items:
            $ref: '#/components/schemas/ProductEventType'
        productCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/ProductCharacteristic'
        overridePrice:
          $ref: '#/components/schemas/OverrideProductPrice'
        splitCharges:
          type: array
          items:
            $ref: '#/components/schemas/SplitCharges'

    ProductInstanceTransfer:
      type: object
      properties:
        productInstance:
          $ref: '#/components/schemas/UUIDContainer'
          description: "Product instance resource name. Product instance which is being transferred."
        productInstanceTransferRequest:
          $ref: '#/components/schemas/ProductInstanceTransferRequest'
        subscriptionReference:
          type: string
          description: "Unique subscription reference which is to be used when product is moved under an existing subscription at target customer or to be used when subscription is being transferred."
        targetContact:
          $ref: '#/components/schemas/UUIDContainer'
        targetServiceAddress:
          $ref: '#/components/schemas/UUIDContainer'
        transferOverrideBillDiscounts:
          type: boolean
          description: "Indicator to decide whether product instance transfer should transfer billing time discount overrides."
        transferOverrideDiscounts:
          type: boolean
          description: "Indicator to decide whether product instance transfer should transfer its rating discount overrides."
        transferOverrideRate:
          type: boolean
          description: "Indicator to decide whether product instance transfer should transfer its rating charge overrides."
        transferPriceOverride:
          type: boolean
          description: "Indicator to decide whether product instance transfer should transfer billing tariff charge overrides."
        transferSharedDiscounts:
          type: boolean
          description: "Indicator to decide whether product instance transfer should transfer shared discounts(nominated events discount)."
        transferUnbilledOneTimeCharges:
          type: boolean
          description: "Indicator to decide whether product instance transfer should transfer un-billed one-time charges owned by product instance which are active after transfer effective date."

    ProductInstanceTransferRequest:
      type: object
      properties:
        uuid:
          type: string
          description: "Product instance transfer request resource Id."
        allowDiscountableUsageTransfer:
          type: boolean
          description: "Indicator to denote whether the discount can be transferred to target product instance."
        chargingMode:
          type: string
          description: "Indicator to decide how the product charges are to be handled for the period which is already charged at source customer."
        effectiveDate:
          type: string
        quantity:
          type: integer
        remainingDiscountableUsageTransferMode:
          type: string
          description: "Indicator to define how the rating time discountable usage discounts are to be transferred. Discount which have capability of carry over are the ones which would be considered for transfer."
        sourceCustomer:
          $ref: '#/components/schemas/Reference'
        sourceLiableTillDate:
          type: string
          description: "Date till when the source will be owning the charges which are already billed during transfer."
        sourceProductInstance:
          $ref: '#/components/schemas/Reference'
          description: "Product instance resource name reference at source customer which is transferred."
        statusAtSource:
          type: string
          description: "Status of product as on transfer date at source customer."
        targetAccount:
          $ref: '#/components/schemas/Reference'
        targetCustomer:
          $ref: '#/components/schemas/Reference'
        targetProductInstance:
          $ref: '#/components/schemas/Reference'
          description: "Product instance resource name reference at target customer after it is transferred."

    OverrideProductPrice:
      type: object
      properties:
        initiation:
          $ref: '#/components/schemas/OverridePrice'
        periodic:
          $ref: '#/components/schemas/OverridePrice'
        termination:
          $ref: '#/components/schemas/OverridePrice'
        suspension:
          $ref: '#/components/schemas/OverridePrice'
        suspensionPeriodic:
          $ref: '#/components/schemas/OverridePrice'
        reactivation:
          $ref: '#/components/schemas/OverridePrice'


    SplitCharges:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Reference'
        chargeType:
          type: string
          description: "Charge type which is to be split between accounts."
        percentageSplit:
          type: number
          description: "Charges are split between accounts based on percentage."
        amountSplit:
          type: number
          description: "Charges are split between accounts based on actual amount."
        totalSplitAmount:
          type: number
          description: "This column holds the summation of split amounts from all non-left over accounts which are part of split."

    ProductInstanceCount:
      type: object
      properties:
        totalProductCount:
          type: integer
        activeProductCount:
          type: integer

    ProductEventType:
      type: object
      properties:
        eventType:
          $ref: '#/components/schemas/NamedUUID'
        ratingTariff:
          $ref: '#/components/schemas/NamedUUID'
        competitorRatingTariff:
          $ref: '#/components/schemas/NamedUUID'
        itemizationOrder:
          $ref: '#/components/schemas/NamedUUID'
        threshold:
          type: string
        eventDeletionMode:
          type: string
        billMaskingRule:
          $ref: '#/components/schemas/NamedUUID'
        storeMaskingRule:
          $ref: '#/components/schemas/NamedUUID'

    Reference:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string

    ProductFamily:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string

    CurrencyReference:
      type: object
      properties:
        symbol:
          type: string
        id:
          type: string
        name:
          type: string

    Characteristic:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
        attribute:
          $ref: '#/components/schemas/Reference'
        value:
          type: string

    UUIDContainer:
      type: object
      properties:
        uuid:
          type: string

    IDContainer:
      type: object
      properties:
        id:
          type: string

    NamedUUID:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string

    NamedID:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    Contact:
      type: object
      properties:
        uuid:
          type: string
        customer:
          $ref: '#/components/schemas/UUIDContainer'
        contactType:
          $ref: '#/components/schemas/NamedUUID'
        notes:
          type: string
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        language:
          $ref: '#/components/schemas/NamedID'
        startDateTime:
          type: string
        address:
          $ref: '#/components/schemas/UUIDContainer'
        emailAddress:
          type: string
        phoneNumber:
          type: string
        faxNumber:
          type: string
        daytimeContactNumber:
          type: string
        daytimeExtensionNumber:
          type: string
        eveningContactNumber:
          type: string
        eveningExtensionNumber:
          type: string

    ContactUUID:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
        contact:
          $ref: '#/components/schemas/UUIDContainer'

    AddressUUID:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/UUIDContainer'
        startDate:
          type: string
        endDate:
          type: string

    TariffDetails:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
        tariff:
          $ref: '#/components/schemas/Reference'
        productQuantity:
          type: integer

    Tariff:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: number
        name:
          type: string
        billingCatalogue:
          $ref: '#/components/schemas/Reference'
        parentTariff:
          $ref: '#/components/schemas/Reference'
        productFamily:
          $ref: '#/components/schemas/Reference'
        salesStartDate:
          type: string
        salesEndDate:
          type: string
        isTaxInclusive:
          type: boolean
        type:
          type: string

    ProductInstanceStatus:
      type: object
      properties:
        status:
          type: string
        statusEffectiveDateTime:
          type: string
        activationDateTime:
          type: string
        statusReason:
          type: string

    EventSource:
      type: object
      properties:
        eventSource:
          type: string
        customer:
          $ref: '#/components/schemas/UUIDContainer'
        effectiveDateTime:
          type: string
        eventTypes:
          type: array
          items:
            $ref: '#/components/schemas/EventSourceEventType'

    EventSourceEventType:
      type: object
      properties:
        productInstance:
          $ref: '#/components/schemas/UUIDContainer'
        eventType:
          $ref: '#/components/schemas/NamedUUID'
        ratingTariff:
          $ref: '#/components/schemas/NamedUUID'
        competitorRatingTariff:
          $ref: '#/components/schemas/NamedUUID'
        billLabel:
          type: string
        description:
          type: string

    Address:
      type: object
      properties:
        uuid:
          type: string
        customer:
          $ref: '#/components/schemas/UUIDContainer'
        addressFormat:
          $ref: '#/components/schemas/UUIDContainer'
        country:
          $ref: '#/components/schemas/NamedID'
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        addressLine5:
          type: string
        zipcode:
          type: string

    Currency:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        minorDecimalPlaces:
          type: integer
        roundingType:
          type: string
        roundingGranularityAmount:
          type: integer
        isTariffCurrency:
          type: boolean
        isInformationCurrency:
          type: boolean
        symbol:
          type: string
        positiveAmountFormat:
          type: string
        positiveAmountTemplate:
          type: string
        negativeAmountFormat:
          type: string
        negativeAmountTemplate:
          type: string

    Item:
      type: object
      properties:
        tableName:
          type: string
        fieldName:
          type: string
        isMandatory:
          type: boolean
        outputLocation:
          type: string
        outputTerminator:
          type: string
        displayName:
          type: string
        positionNumber:
          type: integer


    AddressFormatDAO:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: number
        name:
          type: string
        itemTableName:
          type: string
        itemFieldName:
          type: string
        itemPosition:
          type: number
        itemIsMandatory:
          type: boolean
        itemOutputLocation:
          type: number
        itemOutputTerminator:
          type: number
        itemDisplayName:
          type: string

    TranslatedItemValue:
      type: object
      properties:
        tableName:
          type: string
        fieldName:
          type: string
        languageId:
          type: string
        translatableValue:
          type: string
        translatedValue:
          type: string

    Bill:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Reference'
          description: "Object reference to the configured account"
        currency:
          $ref: '#/components/schemas/Currency'
          description: "Currency object in which bill is generated."
        billNo:
          type: string
          description: "Unique identifier of the bill known to customers"
        billingPeriodStartDateTime:
          type: string
          description: "Defines the start date of the Bill period for which the charges were billed under this bill/invoice"
        billDateTime:
          type: string
          description: "The date on which billing account was scheduled to be billed. Usually this is the day up to which charges are billed for the billing account"
        actualBillDateTime:
          type: string
          description: "The Date on which the account was actually billed. Due to different technical reasons, sometimes the account may not be billed on the same date when it was actually scheduled to be billed."
        billSequence:
          type: integer
          description: "Sequence number of this bill within this billing account"
        billVersion:
          type: integer
          description: "Version number of this bill. Together with the 'Bill Sequence' it forms the unique identifier of a bill for a given billing account"
        billStatus:
          type: string
          description: "Status of the bill as defined by a long list of domain values in RBM"
        billType:
          $ref: '#/components/schemas/NamedUUID'
          description: "Object reference to the configured bill type"
        billHandlingCode:
          $ref: '#/components/schemas/NamedUUID'
        remainingAmount:
          type: number
          description: "The total receivables from this bill that was unpaid as at ACCOUNT.LAST_DEBT_ANALYSIS_DTM"
        chasableDebt:
          type: number
        paymentDueDate:
          type: string
          description: "By which payment for the billed charges is due from this billing account."
        balanceOutAmount:
          type: number
        taxIncludedAmount:
          type: number
          description: "Invoice Net Amount + Invoice Tax Amount"
        taxExcludedAmount:
          type: number
          description: "Total amount invoiced, excluding tax"
        taxAmount:
          type: number
          description: "Amount of tax calculated by billing process for this bill"
        refundsAmount:
          type: number
          description: "It is the total amount of refunds that appear on the bill."
        adjustmentsAmount:
          type: number
          description: "It is the total amount of adjustments that appear on the bill"
        lateFeesAmount:
          type: number
          description: "It is the total amount of late fee, late payment penalty and late payment penalty refund charges that appear on the bill"
        balanceForwardAmount:
          type: number
          description: "Amount that was carried forward from previous invoice"
        paymentsAmount:
          type: number
          description: "Total payments billed against this bill."
        isSettled:
          type: boolean
          description: "Denotes if the total outstanding on the bill is paid up to settle the bill or not"
        settlementDateTime:
          type: string
          description: "Date Time by when this bill was settled. Will be null for not settled bills."
        otcAmount:
          type: number
        eventsBilledFromDateTime:
          type: string
        eventsBilledToDateTime:
          type: string
        otcBilledToDateTime:
          type: string
        fdeExtractId:
          type: string
        receivables:
          type: array
          items:
            $ref: '#/components/schemas/Receivable'

    Receivable:
      type: object
      properties:
        adjustmentsAmount:
          type: number
          description: "The amount of any adjustments invoiced against this receivable."
        receivableAmount:
          type: number
          description: "The amount invoiced for this receivable. For tax inclusive accounts, this will include any tax due.This will be zero for tax receivables."
        lateFeeAmount:
          type: number
          description: "The amount of any late fee, late payment penalty and late payment penalty refund charges invoiced against this receivable."
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
          description: "Name of the Receivable Class for which the charge is reported in the bill"
        taxAmount:
          type: number
          description: "The amount of tax invoiced for tax exclusive accounts. For tax inclusive accounts, this will be empty."
        taxInclusive:
          type: boolean
          description: "Defines whether tax status (inclusive or exclusive) of the charges classified against this bill receivable."

    BilledReceivablesPayment:
      type: object
      properties:
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
          description: "Name of the Receivable Class for which the charge is reported in the bill"
        receivableAmount:
          type: number
          description: "The amount invoiced for this receivable. For tax inclusive accounts, this will include any tax due.This will be zero for tax receivables."
        taxAmount:
          type: number
          description: "The amount of tax invoiced for tax exclusive accounts. For tax inclusive accounts, this will be empty."
        remainingAmount:
          type: number
          description: "The amount of remaining amount amount against this receivable."
        adjustmentsAmount:
          type: number
          description: "The amount of any adjustments invoiced against this receivable."
        lateFeeAmount:
          type: number
          description: "The amount of any late fee, late payment penalty and late payment penalty refund charges invoiced against this receivable."
        taxInclusive:
          type: boolean
          description: "Defines whether tax status (inclusive or exclusive) of the charges classified against this bill receivable."
        currency:
          $ref: '#/components/schemas/Currency'
        paymentDueDate:
          type: string
          description: "The payment due date of the billed receivable entry."
        receivablePaymentAllocation:
          type: array
          items:
            $ref: '#/components/schemas/ReceivablePaymentAllocation'


    ReceivablePaymentAllocation:
      type: object
      properties:
        accountPayment:
          $ref: '#/components/schemas/UUIDContainer'
        paymentDate:
          type: string
        amount:
          type: number


    ReferenceToOneTimeChargeInstance:
      type: object
      properties:
        uuid:
          type: string
        oneTimeCharge:
          $ref: '#/components/schemas/NamedUUID'

    ReferenceToProductInstance:
      type: object
      properties:
        uuid:
          type: string
        product:
          $ref: '#/components/schemas/Reference'

    ReferenceToSubscriptionInstance:
      type: object
      properties:
        uuid:
          type: string
        subscription:
          $ref: '#/components/schemas/NamedUUID'

    ReferenceToAdjustmentInstance:
      type: object
      properties:
        uuid:
          type: string
        adjustment:
          $ref: '#/components/schemas/NamedUUID'

    InstallmentSummary:
      type: object
      properties:
        startDateTime:
          type: string
        endDateTime:
          type: string
        installments:
          type: integer
        billedInstallments:
          type: integer
        totalAmount:
          type: number
        downPaymentAmount:
          type: number
        taxAmount:
          type: number
        billedAmount:
          type: number
        unbilledAmount:
          type: number
        terminationReason:
          type: string
        terminationDateTime:
          type: string
        reverseAdjustmentInstance:
          $ref: '#/components/schemas/ReferenceToAdjustmentInstance'
        downPaymentOtcInstance:
          $ref: '#/components/schemas/ReferenceToOneTimeChargeInstance'
        installmentOtcInstances:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceToOneTimeChargeInstance'

    AttributeValue:
      type: object
      properties:
        value:
          type: string
        attribute:
          $ref: '#/components/schemas/Reference'

    ProductCharacteristic:
      type: object
      properties:
        value:
          type: string
        attribute:
          $ref: '#/components/schemas/ProductAttribute'

    OneTimeChargeInstanceCharacteristic:
      type: object
      properties:
        value:
          type: string
        attribute:
          $ref: '#/components/schemas/OneTimeChargeAttribute'

    OneTimeChargeInstance:
      type: object
      properties:
        uuid:
          type: string
        account:
          $ref: '#/components/schemas/Reference'
        currency:
          $ref: '#/components/schemas/Currency'
        oneTimeCharge:
          $ref: '#/components/schemas/Reference'
        chargeClass:
          type: string
        description:
          type: string
        otcLabel:
          type: string
        productInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        status:
          type: string
        bill:
          $ref: '#/components/schemas/BillKey'
        invoiceNumber:
          type: string
        contractedPointOfSupply:
          $ref: '#/components/schemas/NamedUUID'
        isRealtime:
          type: boolean
        createdDateTime:
          type: string
        installmentNumber:
          type: integer
        chargeDateTime:
          type: string
        quantity:
          type: integer
        amount:
          type: number
        revenueCode:
          $ref: '#/components/schemas/NamedUUID'
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        revenueRecognitionClass:
          $ref: '#/components/schemas/NamedUUID'
        recordType:
          type: string
        hasChild:
          type: boolean
        installmentSummary:
          $ref: '#/components/schemas/InstallmentSummary'
        cancellationText:
          type: string
        terminationDateTime:
          type: string
        address:
          $ref: '#/components/schemas/UUIDContainer'
        oneTimeChargeInstanceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/OneTimeChargeInstanceCharacteristic'

    ReferenceToAccountPayment:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        paymentDate:
          type: string
          format: dateTime

    DepositBalance:
      type: object
      properties:
        uuid:
          type: string
        account:
          $ref: '#/components/schemas/UUIDContainer'
        productInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        validFrom:
          type: string
        createdDateTime:
          type: string
        totalDepositAmount:
          type: number
        totalRefundAmount:
          type: number
        refundFromDate:
          type: string
        firstPaymentDate:
          type: string
        interestCalculationDate:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        interestDetails:
          type: array
          items:
            $ref: '#/components/schemas/InterestDetails'

    InterestDetails:
      type: object
      properties:
        interestAppliedFromDate:
          type: string
        interestAppliedToDate:
          type: string
        interestAmount:
          type: number
        interest:
          $ref: '#/components/schemas/NamedUUID'
        nominalInterestDate:
          type: string

    # <Reference Data>
    BillType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string

    ContractedPointOfSupply:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        invoicingCompany:
          $ref: '#/components/schemas/UUIDContainer'
        isTaxExempt:
          type: boolean
        isTaxExemptRefRequired:
          type: boolean

    Language:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isActive:
          type: boolean

    Country:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        companyAddressFormat:
          $ref: '#/components/schemas/UUIDContainer'
        individualAddressFormat:
          $ref: '#/components/schemas/UUIDContainer'

    ContactType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string


    EventType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        revenueCode:
          $ref: '#/components/schemas/UUIDContainer'
        receivableClass:
          $ref: '#/components/schemas/UUIDContainer'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/EventAttribute'

    EventAttribute:
      type: object
      properties:
        name:
          type: string
        attributeNumber:
          type: integer
        attributeUnit:
          type: string

    RevenueCode:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        isTaxOnly:
          type: boolean
        revenueCodeType:
          type: string

    ReceivableClass:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        receivableClassType:
          type: string

    RevenueRecognitionClass:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        amortizationType:
          type: string

    AddressFormat:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'

    InvoicingCompany:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        paymentMethod:
          type: array
          items:
            $ref: '#/components/schemas/UUIDContainer'
        isAllocationToReceivables:
          type: boolean
        taxationModel:
          type: string

    PaymentOrigin:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string

    PaymentMethod:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        salesStartDate:
          type: string
        salesEndDate:
          type: string
        isMandateRequired:
          type: boolean
        isAccountPickable:
          type: boolean
        isPaymentPickable:
          type: boolean
        mandateConfiguration:
          $ref: '#/components/schemas/MandateConfiguration'

    AdjustmentType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        isAdjustmentTaxable:
          type: boolean
        revenueCode:
          $ref: '#/components/schemas/UUIDContainer'
        receivableClass:
          $ref: '#/components/schemas/UUIDContainer'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AdjustmentTypeAttribute'

    AdjustmentTypeAttribute:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        attributeUnits:
          type: string
        isMandatory:
          type: boolean


    CreditClass:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        currency:
          $ref: '#/components/schemas/IDContainer'
        defaultCreditLimit:
          type: number

    CustomerType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string

    CustomerAttribute:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        columnName:
          type: string
        attributeUnit:
          type: string
        isMandatory:
          type: boolean

    AccountAttribute:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        columnName:
          type: string
        attributeUnit:
          type: string
        isMandatory:
          type: boolean

    PaymentAttribute:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        columnName:
          type: string
        attributeUnit:
          type: string
        isMandatory:
          type: boolean

    BillHandlingCode:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string

    BillStyle:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        isRatingOnly:
          type: boolean
        templates:
          type: array
          items:
            $ref: '#/components/schemas/BillStyleTemplate'

    BillStyleTemplate:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/UUIDContainer'
        billType:
          $ref: '#/components/schemas/UUIDContainer'
        billPurpose:
          type: string
        language:
          $ref: '#/components/schemas/IDContainer'
        paymentMethod:
          $ref: '#/components/schemas/UUIDContainer'
        isTaxInclusive:
          type: boolean
        isRealtime:
          type: boolean
        startDate:
          type: string
        endDate:
          type: string

    TerminationReason:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        description:
          type: string

    ItemisationOrder:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        description:
          type: string
        eventType:
          $ref: '#/components/schemas/UUIDContainer'

    MaskingRule:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        description:
          type: string
        eventType:
          $ref: '#/components/schemas/UUIDContainer'


    # </Reference Data>

    # <Catalogue Data>

    Product:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: number
        name:
          type: string
        description:
          type: string
        parentProduct:
          type: array
          items:
            type: string
        isSubscription:
          type: boolean
        singularName:
          type: string
        pluralName:
          type: string
        productFamily:
          $ref: '#/components/schemas/UUIDContainer'
        salesStartDate:
          type: string
        salesEndDate:
          type: string
        isParametric:
          type: boolean
        type:
          type: string
        eventTypes:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'

    ProductAttribute:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        attributeUnits:
          type: string
        isMandatory:
          type: boolean
        positionNumber:
          type: integer


    BillingCatalogue:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          type: string
        currency:
          $ref: '#/components/schemas/IDContainer'
        invoicingCompany:
          $ref: '#/components/schemas/UUIDContainer'

    BillingTariff:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string
        billingCatalogue:
          $ref: '#/components/schemas/UUIDContainer'
        parentTariff:
          $ref: '#/components/schemas/UUIDContainer'
        productFamily:
          $ref: '#/components/schemas/UUIDContainer'
        salesStartDate:
          type: string
        salesEndDate:
          type: string
        isTaxInclusive:
          type: boolean
        type:
          type: string
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/ProductPricing'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/BillingTariffDiscount'
        overridePricing:
          type: array
          items:
            $ref: '#/components/schemas/OverridePriceDetails'
        ratingTariffs:
          type: array
          items:
            type: string

    ProductPricing:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/UUIDContainer'
        startDate:
          type: string
        endDate:
          type: string
        isInAdvance:
          type: boolean
        isMarginal:
          type: boolean
        chargePeriod:
          type: integer
        chargePeriodUnit:
          type: string
        pricingDetails:
          type: array
          items:
            $ref: '#/components/schemas/PricingDetails'

    PricingDetails:
      type: object
      properties:
        quantity:
          type: integer
        description:
          type: string
        initiation:
          $ref: '#/components/schemas/Price'
        periodic:
          $ref: '#/components/schemas/Price'
        termination:
          $ref: '#/components/schemas/Price'
        suspension:
          $ref: '#/components/schemas/Price'
        suspensionPeriodic:
          $ref: '#/components/schemas/Price'
        reactivation:
          $ref: '#/components/schemas/Price'

    Price:
      type: object
      properties:
        priceType:
          type: string
        value:
          type: number
        effectivePrice:
          type: number
        minimumEffectivePrice:
          type: number
        maximumEffectivePrice:
          type: number

    OverridePriceDetails:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/UUIDContainer'
        startDate:
          type: string
        endDate:
          type: string
        initiation:
          $ref: '#/components/schemas/OverridePriceRange'
        periodic:
          $ref: '#/components/schemas/OverridePriceRange'
        termination:
          $ref: '#/components/schemas/OverridePriceRange'
        suspension:
          $ref: '#/components/schemas/OverridePriceRange'
        suspensionPeriodic:
          $ref: '#/components/schemas/OverridePriceRange'
        reactivation:
          $ref: '#/components/schemas/OverridePriceRange'

    OverridePriceRange:
      type: object
      properties:
        minimum:
          $ref: '#/components/schemas/OverridePrice'
        maximum:
          $ref: '#/components/schemas/OverridePrice'

    OverridePrice:
      type: object
      properties:
        priceType:
          type: string
        value:
          type: number

    BillingTariffDiscount:
      type: object
      properties:
        quantity:
          type: integer
        eventDiscount:
          $ref: '#/components/schemas/UUIDContainer'
        product:
          $ref: '#/components/schemas/UUIDContainer'
        startDate:
          type: string
        endDate:
          type: string



    EventDiscount:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string
        billingCatalogue:
          $ref: '#/components/schemas/UUIDContainer'
        type:
          type: string
        unit:
          type: string
        carryOverEnabled:
          type: boolean
        discountPeriod:
          type: number
        discountPeriodUnit:
          type: string
        discountPercentage:
          type: number
        discountAmount:
          type: number

    OneTimeCharge:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string
        otcType:
          $ref: '#/components/schemas/UUIDContainer'
        salesStartDateTime:
          type: string
        salesEndDateTime:
          type: string
        isRealtime:
          type: boolean
        isInstallmentEligible:
          type: boolean
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/OneTimeChargeAttribute'

    OneTimeChargeType:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: string
        name:
          type: string

    OneTimeChargeAttribute:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        attributeUnits:
          type: string
        isMandatory:
          type: boolean

    OneTimeChargeTariff:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        oneTimeCharge:
          $ref: '#/components/schemas/UUIDContainer'
        billingCatalogue:
          $ref: '#/components/schemas/UUIDContainer'
        defaultRevenueCode:
          $ref: '#/components/schemas/UUIDContainer'
        defaultReceivableClass:
          $ref: '#/components/schemas/UUIDContainer'
        defaultRevenueRecognitionClass:
          $ref: '#/components/schemas/UUIDContainer'
        salesStartDateTime:
          type: string
        salesEndDateTime:
          type: string
        isTaxInclusive:
          type: boolean
        isFixedPrice:
          type: boolean
        price:
          type: number
        minimumPrice:
          type: number
        maximumPrice:
          type: number
        installmentDetails:
          $ref: '#/components/schemas/InstallmentDetails'

    InstallmentDetails:
      type: object
      properties:
        overrideDownpayment:
          type: boolean
        overrideTotalInstallments:
          type: boolean
        downpaymentAmount:
          type: number
        minimumDownpaymentAmount:
          type: number
        maximumDownpaymentAmount:
          type: number
        downpaymentPercentage:
          type: number
        minimumDownpaymentPercent:
          type: number
        maximumDownpaymentPercent:
          type: number
        installmentPeriod:
          type: number
        installmentPeriodUnits:
          type: string
        totalInstallments:
          type: number
        minimumInstalments:
          type: number
        maximumInstalments:
          type: number
        installmentOneTimeCharge:
          $ref: '#/components/schemas/UUIDContainer'
        reverseAdjustmentType:
          $ref: '#/components/schemas/UUIDContainer'

    RatingTariff:
      type: object
      properties:
        uuid:
          type: string
        ratingCatalogue:
          $ref: '#/components/schemas/UUIDContainer'
        name:
          type: string
        description:
          type: string
        ratingTariffType:
          $ref: '#/components/schemas/UUIDContainer'
        salesStartDate:
          type: string
        salesEndDate:
          type: string
        isTaxInclusive:
          type: boolean
        isAutomatic:
          type: boolean
        isPartial:
          type: boolean

    RatingTariffType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        ratingCatalogue:
          $ref: '#/components/schemas/UUIDContainer'
        binding:
          type: array
          items:
            $ref: '#/components/schemas/TariffTypeEventBinding'

    TariffTypeEventBinding:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
        eventType:
          $ref: '#/components/schemas/UUIDContainer'
        inputBinding:
          $ref: '#/components/schemas/UUIDContainer'
        outputBinding:
          $ref: '#/components/schemas/UUIDContainer'

    RatingCatalogue:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        id:
          type: string
        currency:
          $ref: '#/components/schemas/IDContainer'
        invoicingCompany:
          $ref: '#/components/schemas/UUIDContainer'
        status:
          type: string
    # </Catalogue Data>

    Usage:
      type: object
      properties:
        eventReference:
          type: string
        account:
          $ref: '#/components/schemas/Reference'
        currency:
          $ref: '#/components/schemas/Currency'
        eventSource:
          type: string
        eventType:
          $ref: '#/components/schemas/NamedUUID'
        createdDateTime:
          type: string
        eventDateTime:
          type: string
        eventCost:
          type: number
        billedCost:
          type: number
        productInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        status:
          type: string
        invoiceNumber:
          type: string
        bill:
          $ref: '#/components/schemas/BillKey'
        ratingTariff:
          $ref: '#/components/schemas/NamedUUID'
        fragmentNumber:
          type: integer
        isModified:
          type: boolean
        preDiscountCost:
          type: number
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        usageCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCharacteristic'

    BillKey:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/UUIDContainer'
        billSequence:
          type: integer

    BillPayload:
      type: object
      properties:
        contentType:
          type: string
        fileName:
          type: string
        data:
          type: string
          format: byte

    TestBillPayload:
      type: object
      properties:
        billPayload:
          $ref: '#/components/schemas/BillPayload'
        isBillSuppressed:
          type: boolean

    BillRequest:
      type: object
      properties:
        uuid:
          type: string
        account:
          $ref: '#/components/schemas/UUIDContainer'
        billType:
          $ref: '#/components/schemas/NamedUUID'
        billDate:
          type: string
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCharacteristic'
        isRealtime:
          type: boolean
        status:
          type: string
        bill:
          $ref: '#/components/schemas/BillKey'
        invoiceNumber:
          type: string

    BillRequestAttribute:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        columnName:
          type: string
        attributeUnit:
          type: string
        isMandatory:
          type: boolean

    BillProductCharge:
      type: object
      properties:
        bill:
          $ref: '#/components/schemas/BillKey'
        chargeNumber:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        productInstance:
          $ref: '#/components/schemas/ReferenceToProductInstance'
        chargeType:
          type: string
        chargeStartDate:
          type: string
        chargeEndDate:
          type: string
        chargeAmount:
          type: number
        status:
          type: string
        taxCode:
          $ref: '#/components/schemas/NamedUUID'
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        revenueCode:
          $ref: '#/components/schemas/NamedUUID'

    ErrorDescription:
      type: object
      properties:
        httpStatus:
          type: integer
        code:
          type: string
        reason:
          type: string
        message:
          type: string
        stacktrace:
          type: array
          items:
            type: string

    BillCancelRequest:
      type: object
      properties:
        uuid:
          type: string
        account:
          $ref: '#/components/schemas/UUIDContainer'
        createDateTime:
          type: string
        status:
          type: string
        reason:
          type: string

    Adjustment:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: integer
        account:
          $ref: '#/components/schemas/Reference'
        adjustmentType:
          $ref: '#/components/schemas/NamedUUID'
        status:
          type: string
        adjustmentDate:
          type: string
        registrationDateTime:
          type: string
        description:
          type: string
        decision:
          type: string
        decisionDateTime:
          type: string
        amount:
          type: number
        taxAmount:
          type: number
        debtAmount:
          type: number
        dispute:
          $ref: '#/components/schemas/UUIDContainer'
        currency:
          $ref: '#/components/schemas/Currency'
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        contractedPointOfSupply:
          $ref: '#/components/schemas/NamedUUID'
        writeOffAccountPayment:
          $ref: '#/components/schemas/UUIDContainer'
        createdBy:
          type: string
        bill:
          $ref: '#/components/schemas/BillKey'
        invoiceNumber:
          type: string
        billType:
          $ref: '#/components/schemas/NamedUUID'
        adjustmentCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/AdjustmentAttribute'

    AdjustmentAttribute:
      type: object
      properties:
        attribute:
          $ref: '#/components/schemas/AdjustmentTypeAttribute'
        value:
          type: string

    ApproveAdjustment:
      type: object
      properties:
        uuid:
          type: string
        adjustmentType:
          $ref: '#/components/schemas/NamedUUID'
        adjustmentDate:
          type: string
        description:
          type: string
        decision:
          type: string
        amount:
          type: number
        contractedPointOfSupply:
          $ref: '#/components/schemas/NamedUUID'
        adjustmentCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/AdjustmentAttribute'
        requestCreditNote:
          type: boolean

    Dispute:
      type: object
      properties:
        uuid:
          type: string
        id:
          type: integer
        account:
          $ref: '#/components/schemas/Reference'
        disputeType:
          $ref: '#/components/schemas/NamedUUID'
        disputeClass:
          type: string
        disputeDateTime:
          type: string
        registrationDateTime:
          type: string
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        status:
          type: string
        groupNumber:
          type: integer
        description:
          type: string
        decision:
          type: string
        decisionDateTime:
          type: string
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        createdBy:
          type: string
        adjustment:
          $ref: '#/components/schemas/Reference'
        contractedPointOfSupply:
          $ref: '#/components/schemas/NamedUUID'
        bill:
          $ref: '#/components/schemas/BillKey'
        oneTimeChargeInstance:
          $ref: '#/components/schemas/UUIDContainer'
        productInstance:
          $ref: '#/components/schemas/UUIDContainer'
        billProductCharge:
          $ref: '#/components/schemas/BillProductChargeKey'
        usageEvent:
          $ref: '#/components/schemas/UUIDContainer'
        eventType:
          $ref: '#/components/schemas/NamedUUID'

    ApproveDispute:
      type: object
      properties:
        dispute:
          $ref: '#/components/schemas/UUIDContainer'
        decision:
          type: string
        requestCreditNote:
          type: boolean
        adjustment:
          $ref: '#/components/schemas/Adjustment'

    DisputeType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        description:
          type: string

    BillProductChargeKey:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/UUIDContainer'
        billSequence:
          type: integer
        chargeNumber:
          type: number

    Template:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        type:
          type: string

    PaymentFailureCode:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string

    GParam:
      type: object
      properties:
        name:
          type: string
        startDateTime:
          type: string
        stringValue:
          type: string
        integerValue:
          type: integer

    AccountReceivable:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/UUIDContainer'
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        totalReceivableAmount:
          type: number

    Interest:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        description:
          type: string

    TransferBalanceRequest:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/UUIDContainer'
        targetAccount:
          $ref: '#/components/schemas/UUIDContainer'
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          type: number
        description:
          type: string

    TaxCode:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        receivableClass:
          $ref: '#/components/schemas/UUIDContainer'
        revenueCode:
          $ref: '#/components/schemas/UUIDContainer'
        taxType:
          $ref: '#/components/schemas/UUIDContainer'

    AggregatedUsage:
      type: object
      properties:
        aggregationReference:
          type: string
        account:
          $ref: '#/components/schemas/Reference'
        eventSource:
          type: string
        eventSummary:
          $ref: '#/components/schemas/NamedUUID'
        lifecycleType:
          $ref: '#/components/schemas/NamedUUID'
        eventType:
          $ref: '#/components/schemas/NamedUUID'
        currency:
          $ref: '#/components/schemas/Currency'
        eventCost:
          type: number
        ratingTariff:
          $ref: '#/components/schemas/NamedUUID'
        bill:
          $ref: '#/components/schemas/BillKey'
        invoiceNumber:
          type: string
        receivableClass:
          $ref: '#/components/schemas/NamedUUID'
        revenueCode:
          $ref: '#/components/schemas/NamedUUID'
        usageRecords:
          type: number
        fragments:
          type: number
        aggregationPeriod:
          type: number
        aggregationPeriodUnits:
          type: string
        lastEventDateTime:
          type: string
        aggregationStartDateTime:
          type: string
        aggregationEndDateTime:
          type: string
        eventStartDateTime:
          type: string
        eventEndDateTime:
          type: string
        groupingCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCharacteristic'
        summationCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCharacteristic'

    EventSummary:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        eventType:
          $ref: '#/components/schemas/UUIDContainer'
        scope:
          type: string

    EventLifecycleType:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        description:
          type: string


    BillReissueRequest:
      type: object
      properties:
        uuid:
          type: string
        reissueDateTime:
          type: string
        bill:
          $ref: '#/components/schemas/BillKey'
        contact:
          $ref: '#/components/schemas/NamedUUID'
        billStyle:
          $ref: '#/components/schemas/NamedUUID'
        billHandlingCode:
          $ref: '#/components/schemas/NamedUUID'
        status:
          type: string
        invoiceNumber:
          type: string
        reissueNumber:
          type: integer

    AttributeConfiguration:
      type: object
      properties:
        isOptional:
          type: boolean
        minimumLength:
          type: integer
        maximumLength:
          type: integer

    PaymentMandateAttribute:
      type: object
      properties:
        attributeNumber:
          type: integer
        name:
          type: string
        attributeConfiguration:
          $ref: '#/components/schemas/AttributeConfiguration'

    MandateConfiguration:
      type: object
      properties:
        bankAccountHolder:
          $ref: '#/components/schemas/AttributeConfiguration'
        bankAccountNumber:
          $ref: '#/components/schemas/AttributeConfiguration'
        bankCode:
          $ref: '#/components/schemas/AttributeConfiguration'
        bankBranchNumber:
          $ref: '#/components/schemas/AttributeConfiguration'
        bankName:
          $ref: '#/components/schemas/AttributeConfiguration'
        accountType:
          $ref: '#/components/schemas/AttributeConfiguration'
        bic:
          $ref: '#/components/schemas/AttributeConfiguration'
        iban:
          $ref: '#/components/schemas/AttributeConfiguration'
        nameOnCard:
          $ref: '#/components/schemas/AttributeConfiguration'
        cardNumber:
          $ref: '#/components/schemas/AttributeConfiguration'
        cardIssueNumber:
          $ref: '#/components/schemas/AttributeConfiguration'
        cardType:
          $ref: '#/components/schemas/AttributeConfiguration'
        cardBrand:
          $ref: '#/components/schemas/AttributeConfiguration'
        isCardExpirationDateOptional:
          type: boolean
        isCardIssueDateOptional:
          type: boolean
        mandateAttributes:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMandateAttribute'

    BankAccountDetails:
      type: object
      properties:
        name:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        branchNumber:
          type: string
        bankCode:
          type: string
        bankName:
          type: string
        bic:
          type: string
        iban:
          type: string

    CardDetails:
      type: object
      properties:
        name:
          type: string
        cardNumber:
          type: string
        cardType:
          type: string
        expiryDate:
          type: string
        issueDate:
          type: string
        issueNumber:
          type: string
        cardBrand:
          type: string

    PaymentMandateCharacteristic:
      type: object
      properties:
        value:
          type: string
        attribute:
          $ref: '#/components/schemas/PaymentMandateAttribute'

    PaymentMandate:
      type: object
      properties:
        uuid:
          type: string
        account:
          $ref: '#/components/schemas/Reference'
        paymentMethod:
          $ref: '#/components/schemas/NamedUUID'
        mandateReference:
          type: string
        status:
          type: string
        startDateTime:
          type: string
        endDateTime:
          type: string
        cancelDateTime:
          type: string
        bankAccountDetails:
          $ref: '#/components/schemas/BankAccountDetails'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'
        mandateCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMandateCharacteristic'


externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
